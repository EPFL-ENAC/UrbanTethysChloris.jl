var documenterSearchIndex = {"docs":
[{"location":"91-developer/#dev_docs","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"note: Contributing guidelines\nIf you haven't, please read the Contributing guidelines first.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If you want to make contributions to this package that involves code, then this guide is for you.","category":"page"},{"location":"91-developer/#First-time-clone","page":"Developer documentation","title":"First time clone","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: If you have writing rights\nIf you have writing rights, you don't have to fork. Instead, simply clone and skip ahead. Whenever upstream is mentioned, use origin instead.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If this is the first time you work with this repository, follow the instructions below to clone the repository.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fork this repo\nClone your repo (this will create a git remote called origin)\nAdd this repo as a remote:\ngit remote add upstream https://github.com/EPFL-ENAC/UrbanTethysChloris.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will ensure that you have two remotes in your git: origin and upstream. You will create branches and push to origin, and you will fetch and update your local main branch from upstream.","category":"page"},{"location":"91-developer/#Linting-and-formatting","page":"Developer documentation","title":"Linting and formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Install a plugin on your editor to use EditorConfig. This will ensure that your editor is configured with important formatting settings.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We use https://pre-commit.com to run the linters and formatters. In particular, the Julia code is formatted using JuliaFormatter.jl, so please install it globally first:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # Press ]\npkg> activate\npkg> add JuliaFormatter","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To install pre-commit, we recommend using pipx as follows:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"# Install pipx following the link\npipx install pre-commit","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/#Testing","page":"Developer documentation","title":"Testing","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"As with most Julia packages, you can just open Julia in the repository folder, activate the environment, and run test:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # press ]\npkg> activate .\npkg> test","category":"page"},{"location":"91-developer/#Working-on-a-new-issue","page":"Developer documentation","title":"Working on a new issue","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We try to keep a linear history in this repo, so it is important to keep your branches up-to-date.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fetch from the remote and fast-forward your local main\ngit fetch upstream\ngit switch main\ngit merge --ff-only upstream/main\nBranch from main to address the issue (see below for naming)\ngit switch -c 42-add-answer-universe\nPush the new local branch to your personal remote repository\ngit push -u origin 42-add-answer-universe\nCreate a pull request to merge your remote branch into the org main.","category":"page"},{"location":"91-developer/#Branch-naming","page":"Developer documentation","title":"Branch naming","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If there is an associated issue, add the issue number.\nIf there is no associated issue, and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.\nUse dash separated imperative wording related to the issue (e.g., 14-add-tests, 15-fix-model, 16-remove-obsolete-files).","category":"page"},{"location":"91-developer/#Commit-message","page":"Developer documentation","title":"Commit message","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Use imperative or present tense, for instance: Add feature or Fix bug.\nHave informative titles.\nWhen necessary, add a body with details.\nIf there are breaking changes, add the information to the commit message.","category":"page"},{"location":"91-developer/#Before-creating-a-pull-request","page":"Developer documentation","title":"Before creating a pull request","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: Atomic git commits\nTry to create \"atomic git commits\" (recommended reading: The Utopic Git History).","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Make sure the tests pass.\nMake sure the pre-commit tests pass.\nFetch any main updates from upstream and rebase your branch, if necessary:\ngit fetch upstream\ngit rebase upstream/main BRANCH_NAME\nThen you can open a pull request and work with the reviewer to address any issues.","category":"page"},{"location":"91-developer/#Building-and-viewing-the-documentation-locally","page":"Developer documentation","title":"Building and viewing the documentation locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Following the latest suggestions, we recommend using LiveServer to build the documentation. Here is how you do it:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Run julia --project=docs to open Julia in the environment of the docs.\nIf this is the first time building the docs\nPress ] to enter pkg mode\nRun pkg> dev . to use the development version of your package\nPress backspace to leave pkg mode\nRun julia> using LiveServer\nRun julia> servedocs()","category":"page"},{"location":"91-developer/#Making-a-new-release","page":"Developer documentation","title":"Making a new release","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To create a new release, you can follow these simple steps:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Create a branch release-x.y.z\nUpdate version in Project.toml\nUpdate the CHANGELOG.md:\nRename the section \"Unreleased\" to \"[x.y.z] - yyyy-mm-dd\" (i.e., version under brackets, dash, and date in ISO format)\nAdd a new section on top of it named \"Unreleased\"\nAdd a new link in the bottom for version \"x.y.z\"\nChange the \"[unreleased]\" link to use the latest version - end of line, vx.y.z ... HEAD.\nCreate a commit \"Release vx.y.z\", push, create a PR, wait for it to pass, merge the PR.\nGo back to main screen and click on the latest commit (link: https://github.com/EPFL-ENAC/UrbanTethysChloris.jl/commit/main)\nAt the bottom, write @JuliaRegistrator register","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"After that, you only need to wait and verify:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Wait for the bot to comment (should take < 1m) with a link to a PR to the registry\nFollow the link and wait for a comment on the auto-merge\nThe comment should said all is well and auto-merge should occur shortly\nAfter the merge happens, TagBot will trigger and create a new GitHub tag. Check on https://github.com/EPFL-ENAC/UrbanTethysChloris.jl/releases\nAfter the release is create, a \"docs\" GitHub action will start for the tag.\nAfter it passes, a deploy action will run.\nAfter that runs, the stable docs should be updated. Check them and look for the version number.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#UrbanTethysChloris.eb_solver_canyon-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, Bool, FT, FT, NamedTuple, NamedTuple, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.eb_solver_canyon","text":"eb_solver_canyon(\n    TemperatureC::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    TempDamp_ittm::NamedTuple,\n    ViewFactor::RayTracing.ViewFactor{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    WallLayers::NamedTuple,\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParInterceptionTree::NamedTuple,\n    PropOpticalGround::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    PropOpticalWall::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    PropOpticalTree::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParThermalWall::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SunPosition::NamedTuple,\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    TempVecB_ittm::NamedTuple,\n    G2Roof::FT,\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParThermalBuildingFloor::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    RESPreCalc::Bool,\n    fconvPreCalc::FT,\n    fconv::FT,\n    rsGroundPreCalc::NamedTuple,\n    rsTreePreCalc::NamedTuple,\n    HVACSchedule::NamedTuple,\n) where {FT<:AbstractFloat}\n\nCalculate energy balance for canyon surfaces.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTemperatureB: Building temperatures vector\nTempVec_ittm: Temperature vectors at previous time step\nHumidity_ittm: Humidity at previous time step\nMeteoData: Meteorological data\nInt_ittm: Previous timestep interception values\nExWater_ittm: Previous timestep extractable water values\nVwater_ittm: Previous timestep soil water volume values\nOwater_ittm: Previous timestep soil water content values\nSoilPotW_ittm: Previous timestep soil water potential values\nCiCO2Leaf_ittm: Previous timestep leaf CO2 concentration values\nTempDamp_ittm: Previous timestep ground dampening temperature\nViewFactor: View factors between surfaces\nGemeotry_m: Urban geometry parameters\nFractionsGround: Ground surface fractions\nWallLayers: Wall layer parameters\nParSoilGround: Soil parameters for ground\nParInterceptionTree: Tree interception parameters\nPropOpticalGround: Ground optical properties\nPropOpticalWall: Wall optical properties\nPropOpticalTree: Tree optical properties\nParThermalGround: Ground thermal properties\nParThermalWall: Wall thermal properties\nParVegGround: Ground vegetation parameters\nParVegTree: Tree vegetation parameters\nSunPosition: Solar position parameters\nHumidityAtm: Atmospheric humidity parameters\nAnthropogenic: Anthropogenic parameters\nParCalculation: Calculation parameters\nTempVecB_ittm: Building temperature vectors at previous time step\nG2Roof: Conductive heat flux through roof [W/m²]\nPropOpticalIndoors: Indoor optical properties\nParHVAC: HVAC parameters\nParThermalBuildingFloor: Building floor thermal parameters\nParWindows: Window parameters\nBEM_on: Building Energy Model switch\nRESPreCalc: Use pre-calculated resistances\nfconvPreCalc: Pre-calculated convection factors\nfconv: Convection factors\nrsGroundPreCalc: Pre-calculated ground resistances\nrsTreePreCalc: Pre-calculated tree resistances\nHVACSchedule: HVAC operation schedule\n\nReturns\n\nYcanyon::Vector{FT}: Canyon energy balance residuals\nG2WallSun::FT: Conductive heat flux through sunlit wall\nG2WallShade::FT: Conductive heat flux through shaded wall\nSWRabs_t::Radiation.RadiationFluxes{FT}: Absorbed shortwave radiation\nSWRabsWallSunTransmitted::FT: Shortwave radiation absorbed by sunlit wall transmitted indoors\nSWRabsWallShadeTransmitted::FT: Shortwave radiation absorbed by shaded wall transmitted indoors\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.eb_solver_roof-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, Bool, Bool, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.eb_solver_roof","text":"eb_solver_roof(\n    TemperatureR::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    PropOpticalRoof::ModelComponents.Parameters.OutdoorOpticalProperties{FT},\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    BEM_on::Bool,\n    RESPreCalc::Bool,\n    rsRoofPreCalc::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate energy balance for roof surfaces.\n\nArguments\n\nTemperatureR: Roof temperatures [K]\nTemperatureB: Building temperatures [K]\nTempVec_ittm: Temperature vectors at previous time step\nMeteoData: Meteorological data\nInt_ittm: Previous timestep interception values\nExWater_ittm: Previous timestep extractable water values\nVwater_ittm: Previous timestep soil water volume values\nOwater_ittm: Previous timestep soil water content values\nSoilPotW_ittm: Previous timestep soil water potential values\nCiCO2Leaf_ittm: Previous timestep leaf CO2 concentration values\nFractionsRoof: Roof surface fractions\nParSoilRoof: Soil parameters for roof\nPropOpticalRoof: Optical properties for roof\nParThermalRoof: Thermal properties for roof\nParVegRoof: Vegetation parameters for roof\nHumidityAtm: Atmospheric humidity parameters\nAnthropogenic: Anthropogenic parameters\nParCalculation: Calculation parameters\nBEM_on: Building Energy Model switch\nRESPreCalc: Use pre-calculated resistances\nrsRoofPreCalc: Pre-calculated resistance parameters\n\nReturns\n\nYroof: Energy balance residuals [W/m²]\nG2Roof: Conductive heat flux through roof [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.eb_solver_urban_climate_building_energy_model-Union{Tuple{FT}, Tuple{Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, Bool, FT, FT, Vararg{NamedTuple, 4}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.eb_solver_urban_climate_building_energy_model","text":"eb_solver_urban_climate_building_energy_model(\n    TemperatureTot::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    TempVecB_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    TempDamp_ittm::NamedTuple,\n    ViewFactor::RayTracing.ViewFactor{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    WallLayers::NamedTuple,\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParInterceptionTree::NamedTuple,\n    PropOpticalGround::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    PropOpticalWall::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    PropOpticalTree::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParThermalWall::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    PropOpticalRoof::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SunPosition::NamedTuple,\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParThermalBuildingFloor::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    RESPreCalc::Bool,\n    fconvPreCalc::FT,\n    fconv::FT,\n    rsRoofPreCalc::NamedTuple,\n    rsGroundPreCalc::NamedTuple,\n    rsTreePreCalc::NamedTuple,\n    HVACSchedule::NamedTuple\n) where {FT<:AbstractFloat}\n\nSolve energy balance for urban climate and building energy model.\n\nArguments\n\nTemperatureTot: Temperature vector containing all surface temperatures\nTempVec_ittm: Temperature vectors at previous time step\nTempVecB_ittm: Building temperature vectors at previous time step\nHumidity_ittm: Humidity at previous time step\nOther parameters match those of ebsolverroof, ebsolvercanyon and ebsolverbuilding\n\nReturns\n\nYtot: Combined energy balance residuals from roof, canyon and building\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.eb_wb_canyon-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, Bool, FT, FT, NamedTuple, NamedTuple, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.eb_wb_canyon","text":"eb_wb_canyon(\n    TemperatureC::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    TempDamp_ittm::NamedTuple,\n    ViewFactor::RayTracing.ViewFactor{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    WallLayers::NamedTuple,\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParInterceptionTree::NamedTuple,\n    PropOpticalGround::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    PropOpticalWall::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    PropOpticalTree::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParThermalWall::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SunPosition::NamedTuple,\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    TempVecB_ittm::NamedTuple,\n    G2Roof::FT,\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParThermalBuildingFloor::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    RESPreCalc::Bool,\n    fconvPreCalc::FT,\n    fconv::FT,\n    rsGroundPreCalc::NamedTuple,\n    rsTreePreCalc::NamedTuple,\n    HVACSchedule::NamedTuple,\n) where {FT<:AbstractFloat}\n\nCalculate energy balance for canyon surfaces.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTemperatureB: Building temperatures vector\nTempVec_ittm: Temperature vectors at previous time step\nHumidity_ittm: Humidity at previous time step\nMeteoData: Meteorological data\nInt_ittm: Previous timestep interception values\nExWater_ittm: Previous timestep extractable water values\nVwater_ittm: Previous timestep soil water volume values\nOwater_ittm: Previous timestep soil water content values\nSoilPotW_ittm: Previous timestep soil water potential values\nCiCO2Leaf_ittm: Previous timestep leaf CO2 concentration values\nTempDamp_ittm: Previous timestep ground dampening temperature\nViewFactor: View factors between surfaces\nGemeotry_m: Urban geometry parameters\nFractionsGround: Ground surface fractions\nWallLayers: Wall layer parameters\nParSoilGround: Soil parameters for ground\nParInterceptionTree: Tree interception parameters\nPropOpticalGround: Ground optical properties\nPropOpticalWall: Wall optical properties\nPropOpticalTree: Tree optical properties\nParThermalGround: Ground thermal properties\nParThermalWall: Wall thermal properties\nParVegGround: Ground vegetation parameters\nParVegTree: Tree vegetation parameters\nSunPosition: Solar position parameters\nHumidityAtm: Atmospheric humidity parameters\nAnthropogenic: Anthropogenic parameters\nParCalculation: Calculation parameters\nTempVecB_ittm: Building temperature vectors at previous time step\nG2Roof: Conductive heat flux through roof [W/m²]\nPropOpticalIndoors: Indoor optical properties\nParHVAC: HVAC parameters\nParThermalBuildingFloor: Building floor thermal parameters\nParWindows: Window parameters\nBEM_on: Building Energy Model switch\nRESPreCalc: Use pre-calculated resistances\nfconvPreCalc: Pre-calculated convection factors\nfconv: Convection factors\nrsGroundPreCalc: Pre-calculated ground resistances\nrsTreePreCalc: Pre-calculated tree resistances\nHVACSchedule: HVAC operation schedule\n\nReturns\n\nYcanyon::Vector{FT}: Canyon energy balance residuals\nG2WallSun::FT: Conductive heat flux through sunlit wall\nG2WallShade::FT: Conductive heat flux through shaded wall\nSWRabs_t::Radiation.RadiationFluxes{FT}: Absorbed shortwave radiation\nSWRabsWallSunTransmitted::FT: Shortwave radiation absorbed by sunlit wall transmitted indoors\nSWRabsWallShadeTransmitted::FT: Shortwave radiation absorbed by shaded wall transmitted indoors\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.eb_wb_roof-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, Bool, Bool, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.eb_wb_roof","text":"eb_solver_roof(\n    TemperatureR::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    Runon_ittm::NamedTuple,\n    Geometry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    PropOpticalRoof::ModelComponents.Parameters.OutdoorOpticalProperties{FT},\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    BEM_on::Bool,\n    RESPreCalc::Bool,\n    rsRoofPreCalc::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate energy balance for roof surfaces.\n\nArguments\n\nTemperatureR: Roof temperatures [K]\nTemperatureB: Building temperatures [K]\nTempVec_ittm: Temperature vectors at previous time step\nMeteoData: Meteorological data\nInt_ittm: Interception at previous time step\nExWater_ittm: Extractable water at previous time step\nVwater_ittm: Soil water volume at previous time step\nOwater_ittm: Soil water content at previous time step\nSoilPotW_ittm: Soil water potential at previous time step\nCiCO2Leaf_ittm: Leaf CO2 concentration at previous time step\nRunon_ittm: Runon at previous time step\nGeometry_m: Urban geometry parameters\nFractionsRoof: Roof surface fractions\nParSoilRoof: Soil parameters for roof\nPropOpticalRoof: Optical properties for roof\nParThermalRoof: Thermal properties for roof\nParVegRoof: Vegetation parameters for roof\nHumidityAtm: Atmospheric humidity parameters\nAnthropogenic: Anthropogenic parameters\nParCalculation: Calculation parameters\nBEM_on: Building Energy Model switch\nRESPreCalc: Use pre-calculated resistances\nrsRoofPreCalc: Pre-calculated resistance parameters\n\nReturns\n\nSWRabsRoofImp: Absorbed shortwave radiation by impervious roof [W/m²]\nSWRabsRoofVeg: Absorbed shortwave radiation by vegetated roof [W/m²]\nSWRabsTotalRoof: Total absorbed shortwave radiation by roof [W/m²]\nSWRoutRoofImp: Outgoing shortwave radiation from impervious roof [W/m²]\nSWRoutRoofVeg: Outgoing shortwave radiation from vegetated roof [W/m²]\nSWRoutTotalRoof: Total outgoing shortwave radiation from roof [W/m²]\nSWRinRoofImp: Incoming shortwave radiation on impervious roof [W/m²]\nSWRinRoofVeg: Incoming shortwave radiation on vegetated roof [W/m²]\nSWRinTotalRoof: Total incoming shortwave radiation on roof [W/m²]\nSWREBRoofImp: Shortwave radiation energy balance for impervious roof [W/m²]\nSWREBRoofVeg: Shortwave radiation energy balance for vegetated roof [W/m²]\nSWREBTotalRoof: Total shortwave radiation energy balance for roof [W/m²]\nLWRabsRoofVeg: Absorbed longwave radiation by vegetated roof [W/m²]\nLWRabsRoofImp: Absorbed longwave radiation by impervious roof [W/m²]\nLWRabsTotalRoof: Total absorbed longwave radiation by roof [W/m²]\nLWRoutRoofVeg: Outgoing longwave radiation from vegetated roof [W/m²]\nLWRoutRoofImp: Outgoing longwave radiation from impervious roof [W/m²]\nLWRoutTotalRoof: Total outgoing longwave radiation from roof [W/m²]\nLWRinRoofImp: Incoming longwave radiation on impervious roof [W/m²]\nLWRinRoofVeg: Incoming longwave radiation on vegetated roof [W/m²]\nLWRinTotalRoof: Total incoming longwave radiation on roof [W/m²]\nLWREBRoofImp: Longwave radiation energy balance for impervious roof [W/m²]\nLWREBRoofVeg: Longwave radiation energy balance for vegetated roof [W/m²]\nLWREBTotalRoof: Total longwave radiation energy balance for roof [W/m²]\nHfluxRoofImp: Sensible heat flux from impervious roof [W/m²]\nHfluxRoofVeg: Sensible heat flux from vegetated roof [W/m²]\nHfluxRoof: Total sensible heat flux from roof [W/m²]\nLEfluxRoofImp: Latent heat flux from impervious roof [W/m²]\nLEfluxRoofVegInt: Interception latent heat flux from vegetated roof [W/m²]\nLEfluxRoofVegPond: Pond latent heat flux from vegetated roof [W/m²]\nLEfluxRoofVegSoil: Soil latent heat flux from vegetated roof [W/m²]\nLTEfluxRoofVeg: Transpiration latent heat flux from vegetated roof [W/m²]\nLEfluxRoofVeg: Total latent heat flux from vegetated roof [W/m²]\nLEfluxRoof: Total latent heat flux from roof [W/m²]\nG1RoofImp: Conductive heat flux through impervious roof [W/m²]\nG2RoofImp: Conductive heat flux from impervious roof to building [W/m²]\ndsRoofImp: Energy storage change in impervious roof [W/m²]\nG1RoofVeg: Conductive heat flux through vegetated roof [W/m²]\nG2RoofVeg: Conductive heat flux from vegetated roof to building [W/m²]\ndsRoofVeg: Energy storage change in vegetated roof [W/m²]\nG1Roof: Total conductive heat flux through roof [W/m²]\nG2Roof: Total conductive heat flux from roof to building [W/m²]\ndsRoof: Total energy storage change in roof [W/m²]\nraRooftoAtm: Aerodynamic resistance from roof to atmosphere [s/m]\nrb_LRoof: Leaf boundary layer resistance on roof [s/m]\nrap_LRoof: Aerodynamic resistance for pond on roof [s/m]\nr_soilRoof: Soil resistance on roof [s/m]\nrs_sunRoof: Stomatal resistance for sunlit leaves on roof [s/m]\nrs_shdRoof: Stomatal resistance for shaded leaves on roof [s/m]\nEfluxRoofImp: Water vapor flux from impervious roof [kg/m²/s]\nEfluxRoofVegInt: Water vapor flux from intercepted water on vegetated roof [kg/m²/s]\nEfluxRoofVegPond: Water vapor flux from ponded water on vegetated roof [kg/m²/s]\nEfluxRoofVegSoil: Water vapor flux from soil on vegetated roof [kg/m²/s]\nTEfluxRoofVeg: Transpiration from vegetation on roof [kg/m²/s]\nEfluxRoofVeg: Total water vapor flux from vegetated roof [kg/m²/s]\nEfluxRoof: Total water vapor flux from roof [kg/m²/s]\nQRoofImp: Runoff from impervious roof [mm/dth]\nQRoofVegDrip: Drip from vegetated roof [mm/dth]\nQRoofVegPond: Ponding on vegetated roof [mm/dth]\nLkRoofImp: Leakage from impervious roof [mm/h]\nLkRoofVeg: Leakage from vegetated roof [mm/h]\nLkRoof: Total roof leakage [mm/h]\nQRoofVegSoil: Soil runoff from vegetated roof [mm/dth]\nRunoffRoofTot: Total roof runoff [mm/dth]\nRunonRoofTot: Total roof runon [mm/dth]\nIntRoofImp: Interception on impervious roof [mm]\nIntRoofVegPlant: Interception on vegetation [mm]\nIntRoofVegGround: Interception on ground below vegetation [mm]\ndInt_dtRoofImp: Change in impervious roof interception [mm/dth]\ndInt_dtRoofVegPlant: Change in vegetation interception [mm/dth]\ndInt_dtRoofVegGround: Change in ground interception [mm/dth]\nIntRooftot: Total roof interception [mm]\ndInt_dtRooftot: Total change in roof interception [mm/dth]\ndVRoofSoil_dt: Change in soil water volume [mm/dth]\nfRoofVeg: Infiltration rate on vegetated roof [mm/h]\nVRoofSoil: Soil water volume [mm]\nOwRoofSoil: Soil water content [-]\nOSwRoofSoil: Surface soil water content [-]\nExWaterRoof_H: Extractable water from higher soil layers [mm/h]\nSoilPotWRoof_H: Soil water potential in higher soil layers [MPa]\nExWaterRoof_L: Extractable water from lower soil layers [mm/h]\nSoilPotWRoof_L: Soil water potential in lower soil layers [MPa]\nCiCO2LeafRoofVegSun: Sunlit leaf CO2 concentration [µmol/mol]\nCiCO2LeafRoofVegShd: Shaded leaf CO2 concentration [µmol/mol]\nWBRoofVegInVeg: Water balance for vegetation interception [mm/dth]\nWBRoofVegInGround: Water balance for ground interception [mm/dth]\nWBRoofVegSoil: Water balance for soil [mm/dth]\nEBRoofImp: Energy balance for impervious roof [W/m²]\nEBRoofVeg: Energy balance for vegetated roof [W/m²]\nYroof: Energy balance residuals [W/m²]\nWBRoofImp: Water balance for impervious roof [mm/dth]\nWBRoofVeg: Water balance for vegetated roof [mm/dth]\nWBRoofTot: Total roof water balance [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.f_solver_tot-Union{Tuple{FT}, Tuple{NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, NamedTuple, NamedTuple, NamedTuple, NamedTuple, Bool, FT, FT, Vararg{NamedTuple, 4}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.f_solver_tot","text":"f_solver_tot(\n    TempVec_ittm::NamedTuple,\n    TempVecB_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    TempDamp_ittm::NamedTuple,\n    ViewFactor::RayTracing.ViewFactor{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    WallLayers::NamedTuple,\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParInterceptionTree::NamedTuple,\n    PropOpticalGround::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    PropOpticalWall::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    PropOpticalTree::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParThermalWall::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    PropOpticalRoof::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SunPosition::NamedTuple,\n    HumidityAtm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParCalculation::NamedTuple,\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParThermalBuildingFloor::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    TempVec_ittm2Ext::NamedTuple,\n    Humidity_ittm2Ext::NamedTuple,\n    TempVecB_ittm2Ext::NamedTuple,\n    Meteo_ittm::NamedTuple,\n    RESPreCalc::Bool,\n    fconvPreCalc::FT,\n    fconv::FT,\n    rsRoofPreCalc::NamedTuple,\n    rsGroundPreCalc::NamedTuple,\n    rsTreePreCalc::NamedTuple,\n    HVACSchedule::NamedTuple,\n) where {FT<:AbstractFloat}\n\nNonlinear system solver for the coupled energy balance equations.\n\nReturns\n\nT::Vector{FT}: Solution vector containing temperatures\nfval::Vector{FT}: Function values at solution\nexitflag::Int: Exit flag indicating convergence status\n\nTemperature vector indices:\n\nTroof_imp: Impervious roof temperature\nTroof_veg: Vegetated roof temperature\nTroofinteriorimp: Interior impervious roof temperature\nTroofinteriorveg: Interior vegetated roof temperature\nTGroundImp: Ground impervious area temperature\nTGroundBare: Ground bare area temperature\nTGroundVeg: Ground vegetated area temperature\nTWallSun: Sunlit wall temperature\nTWallShade: Shaded wall temperature\nTTree: Tree canopy temperature\nTWallIntSun: Interior sunlit wall temperature\nTWallIntShade: Interior shaded wall temperature\nTCanyon: Canyon air temperature\nqCanyon: Canyon specific humidity\nTCeiling: Building ceiling temperature\nTWallSunInt: Interior sunlit wall temperature\nTWallShadeInt: Interior shaded wall temperature\nTWindows: Window temperature\nTGroundInt: Interior ground temperature\nTIntMass: Internal mass temperature\nTBin: Indoor air temperature\nqBin: Indoor specific humidity\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.incoming_longwave-Union{Tuple{FT}, Tuple{FT, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.incoming_longwave","text":"incoming_longwave(Ta::FT, ea::FT, N::FT) where {FT<:AbstractFloat}\n\nCalculate incoming longwave radiation.\n\nArguments\n\nTa: Air temperature [°C]\nea: Vapor pressure [Pa]\nN: Cloudiness [0-1] or incoming longwave radiation if N > 1 [W/m²]\n\nReturns\n\nLatm: Incoming longwave radiation [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.set_sun_variables-Union{Tuple{FT}, Tuple{Dates.DateTime, Vararg{FT, 5}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.set_sun_variables","text":"set_sun_variables(datam, deltagmt, lon, lat, t_bef, t_aft)\n\nCalculate solar position variables.\n\nReturns tuple of (hS, zetaS, Tsunrise, Tsunset) where:\n\nh_S: solar altitude [rad]\nzeta_S: Sun's azimuth [rad]\nT_sunrise: sunrise time [h]\nT_sunset: sunset time [h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Building-Energy-Model","page":"Reference","title":"Building Energy Model","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.ac_heating_module-Union{Tuple{FT}, Tuple{Bool, Bool, Bool, Bool, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, Vararg{FT, 9}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.ac_heating_module","text":"ac_heating_module(\n    AC_on::Bool,\n    Heat_on::Bool,\n    AC_onCool::Bool,\n    AC_onDehum::Bool,\n    ParHVAC::NamedTuple,\n    HbuildIn::FT,\n    Hvent::FT,\n    Hequip::FT,\n    Hpeople::FT,\n    dSH_air::FT,\n    LEvent::FT,\n    LEequip::FT,\n    LEpeople::FT,\n    dSLE_air::FT\n) where {FT<:AbstractFloat}\n\nAC & heating module that removes or adds sensible and latent heat as needed to maintain air temperature and humidity. For AC, both temperature and humidity are controlled. For heating, only temperature is controlled.\n\nArguments\n\nAC_on: Master AC switch (on/off)\nHeat_on: Heating switch (on/off)\nAC_onCool: AC cooling switch (on/off)\nAC_onDehum: AC dehumidification switch (on/off)\nParHVAC: HVAC parameters\nHbuildIn: Building internal sensible heat [W]\nHvent: Ventilation sensible heat [W]\nHequip: Equipment sensible heat [W]\nHpeople: People sensible heat [W]\ndSH_air: Change in sensible heat storage [W]\nLEvent: Ventilation latent heat [W]\nLEequip: Equipment latent heat [W]\nLEpeople: People latent heat [W]\ndSLE_air: Change in latent heat storage [W]\n\nReturns\n\nAC_on::Bool: Master AC switch status\nAC_onCool::Bool: AC cooling switch status\nAC_onDehum::Bool: AC dehumidification switch status\nHeat_on::Bool: Heating switch status\nH_AC_Heat::FT: Sensible heat removed/added by HVAC [W]\nLE_AC_Heat::FT: Latent heat removed/added by HVAC [W]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.ac_heating_turn_on_off-Union{Tuple{FT}, Tuple{UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.ac_heating_turn_on_off","text":"ac_heating_turn_on_off(\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    TempVecB_ittm::NamedTuple,\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Geometry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    BEM_on::Bool\n) where {FT<:AbstractFloat}\n\nTurn AC and heating on/off based on temperature and humidity conditions.\n\nArguments\n\nParHVAC: HVAC parameters\nTempVecB_ittm: Building temperature vectors at previous time step\nTempVec_ittm: Temperature vectors at previous time step\nHumidity_ittm: Humidity parameters\nMeteoData: Meteorological data\nGeometry_m: Urban geometry parameters\nBEM_on: Building Energy Model switch\n\nReturns\n\nParHVAC::ModelComponents.Parameters.HVACParameters{FT}: Updated HVAC parameters\nParHVACorig::ModelComponents.Parameters.HVACParameters{FT}: Original HVAC parameters\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.conductive_heat_flux_building_floor-Union{Tuple{FT}, Tuple{FT, FT, FT, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.conductive_heat_flux_building_floor","text":"conductive_heat_flux_building_floor(\n    Tinground::FT,\n    TingroundDamptm1::FT,\n    Tingroundtm1::FT,\n    ParCalculation::NamedTuple,\n    ParThermalBuildFloor::ModelComponents.Parameters.ThermalBuilding{FT}\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux through building floor.\n\nArguments\n\nTinground: Ground temperature [K]\nTingroundDamptm1: Damped ground temperature at previous timestep [K]\nTingroundtm1: Ground temperature at previous timestep [K]\nParCalculation: Calculation parameters\nParThermalBuildFloor: Thermal parameters for building floor\n\nReturns\n\nG::FT: Heat flux through building floor [W/m²]\nTdp::FT: Updated damped temperature [K]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.eb_solver_building-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, FT, FT, FT, FT, NamedTuple, UrbanTethysChloris.Radiation.RadiationFluxes{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.eb_solver_building","text":"eb_solver_building(\n    TemperatureC::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVecB_ittm::NamedTuple,\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    SWRinWsun::FT,\n    SWRinWshd::FT,\n    G2Roof::FT,\n    G2WallSun::FT,\n    G2WallShade::FT,\n    TempDamp_ittm::NamedTuple,\n    SWRabs_t::NamedTuple,\n    Geometry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParCalculation::NamedTuple,\n    ParThermalBuildingInt::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    HVACSchedule::NamedTuple,\n) where {FT<:AbstractFloat}\n\nSimple Building energy model.\n\nArguments\n\nTemperatureC: Outdoor temperatures of buildings and air and humidity [K]\nTemperatureB: Building internal temperature and air and humidity [K]\nTempVecB_ittm: Building internal temperature and humidity from previous time step\nTempVec_ittm: Temperature vectors at previous time step\nHumidity_ittm: Humidity at previous time step\nMeteoData: Atmospheric forcing conditions\nSWRinWsun: Incoming shortwave radiation on sunlit wall [W/m²]\nSWRinWshd: Incoming shortwave radiation on shaded wall [W/m²]\nG2Roof: Conductive heat flux through roof [W/m²]\nG2WallSun: Conductive heat flux through sunlit wall [W/m²]\nG2WallShade: Conductive heat flux through shaded wall [W/m²]\nTempDamp_ittm: Ground dampening temperature from previous time step\nSWRabs_t: Absorbed shortwave radiation [W/m²]\nGeometry_m: Urban geometry parameters\nPropOpticalIndoors: Building internal albedo/emissivities\nParHVAC: HVAC parameters\nParCalculation: Calculation parameters\nParThermalBuildingInt: Thermal parameters for building interior\nParWindows: Window parameters\nBEM_on: Building Energy Model switch\nHVACSchedule: HVAC operation schedule\n\nReturns\n\nYBuildInt::Vector{FT}: Building internal energy balance residuals\nWasteHeat::NamedTuple: Waste heat emissions from AC and ventilation\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.eb_solver_building_output-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, FT, FT, FT, FT, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HVACParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.eb_solver_building_output","text":"eb_solver_building_output(\n    TemperatureC::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVecB_ittm::NamedTuple,\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    SWRinWsun::FT,\n    SWRinWshd::FT,\n    G2Roof::FT,\n    G2WallSun::FT,\n    G2WallShade::FT,\n    TempDamp_ittm::NamedTuple,\n    SWRabs_t::NamedTuple,\n    Geometry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    PropOpticalIndoors::ModelComponents.Parameters.IndoorOpticalProperties{FT},\n    ParHVAC::ModelComponents.Parameters.HVACParameters{FT},\n    ParCalculation::NamedTuple,\n    ParThermalBuildingInt::ModelComponents.Parameters.ThermalBuilding{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    HVACSchedule::NamedTuple,\n) where {FT<:AbstractFloat}\n\nSimple Building energy model.\n\nArguments\n\nTemperatureC: Outdoor temperatures of buildings and air and humidity [K]\nTemperatureB: Building internal temperature and air and humidity [K]\nTempVecB_ittm: Building internal temperature and humidity from previous time step\nTempVec_ittm: Temperature vectors at previous time step\nHumidity_ittm: Humidity at previous time step\nMeteoData: Atmospheric forcing conditions\nSWRinWsun: Incoming shortwave radiation on sunlit wall [W/m²]\nSWRinWshd: Incoming shortwave radiation on shaded wall [W/m²]\nG2Roof: Conductive heat flux through roof [W/m²]\nG2WallSun: Conductive heat flux through sunlit wall [W/m²]\nG2WallShade: Conductive heat flux through shaded wall [W/m²]\nTempDamp_ittm: Ground dampening temperature from previous time step\nSWRabs_t: Absorbed shortwave radiation [W/m²]\nGeometry_m: Urban geometry parameters\nPropOpticalIndoors: Building internal albedo/emissivities\nParHVAC: HVAC parameters\nParCalculation: Calculation parameters\nParThermalBuildingInt: Thermal parameters for building interior\nParWindows: Window parameters\nBEM_on: Building Energy Model switch\nHVACSchedule: HVAC operation schedule\n\nReturns\n\nHbuildInt::NamedTuple: Internal sensible heat fluxes [W/m²]\nLEbuildInt::NamedTuple: Internal latent heat fluxes [W/m²]\nGbuildInt::NamedTuple: Internal conductive heat fluxes [W/m²]\nSWRabsB::NamedTuple: Absorbed shortwave radiation [W/m²]\nLWRabsB::NamedTuple: Absorbed longwave radiation [W/m²]\nTdpfloor: Floor dampening temperature [K]\nWasteHeat: Waste heat emissions [W/m²]\nEnergyUse: Energy consumption [W*h]\nHumidityBuilding: Building humidity parameters\nParACHeat: HVAC system operation parameters\nYBuildInt::Vector{FT}: Building internal energy balance residuals [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.heat_storage_change_internal_mass-Union{Tuple{FT}, Tuple{FT, FT, NamedTuple, NamedTuple, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.heat_storage_change_internal_mass","text":"heat_storage_change_internal_mass(\n    Tintmass::FT,\n    Tintmasstm1::FT,\n    ParThermalBuildFloor::NamedTuple,\n    Geometry_m::NamedTuple,\n    ParCalculation::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate heat storage change in building internal mass.\n\nArguments\n\nTintmass: Internal mass temperature [K]\nTintmasstm1: Internal mass temperature at previous timestep [K]\nParThermalBuildFloor: Thermal parameters for building floor\nGeometry_m: Building geometry parameters\nParCalculation: Calculation parameters\n\nReturns\n\ndS::Vector{FT}: Energy storage change in internal mass [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.lwr_abs_building_half-Union{Tuple{FT}, NTuple{18, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.lwr_abs_building_half","text":"lwr_abs_building_half(\n    Tceiling::FT,\n    Tinwall::FT,\n    Tintmass::FT,\n    Tground::FT,\n    A_c::FT,\n    A_g::FT,\n    A_h::FT,\n    F_gc::FT,\n    F_gw::FT,\n    F_ww::FT,\n    F_wg::FT,\n    F_wc::FT,\n    F_cg::FT,\n    F_cw::FT,\n    ec::FT,\n    eg::FT,\n    ew::FT,\n    em::FT\n) where {FT<:AbstractFloat}\n\nCalculate longwave radiation absorption in building for half of the building.\n\nArguments\n\nTceiling: Ceiling temperature [K]\nTinwall: Interior wall temperature [K]\nTintmass: Internal mass temperature [K]\nTground: Ground temperature [K]\nA_c: Ceiling area [m²]\nA_g: Ground area [m²]\nA_h: Wall area [m²]\nF_gc: View factor ground to ceiling\nF_gw: View factor ground to wall\nF_ww: View factor wall to wall\nF_wg: View factor wall to ground\nF_wc: View factor wall to ceiling\nF_cg: View factor ceiling to ground\nF_cw: View factor ceiling to wall\nec: Ceiling emissivity\neg: Ground emissivity\new: Wall emissivity\nem: Internal mass emissivity\n\nReturns\n\nLWRinB::NamedTuple: Incoming longwave radiation for each surface [W/m²]\nLWRoutB::NamedTuple: Outgoing longwave radiation for each surface [W/m²]\nLWRabsB::NamedTuple: Absorbed longwave radiation for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.lwr_abs_indoors-Union{Tuple{FT}, NTuple{11, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.lwr_abs_indoors","text":"lwr_abs_indoors(\n    Tinwallsun::FT,\n    Tinwallshd::FT,\n    Tceiling::FT,\n    Tground::FT,\n    Tintmass::FT,\n    Hbuild::FT,\n    Wroof::FT,\n    ec::FT,\n    eg::FT,\n    em::FT,\n    ew::FT\n) where {FT<:AbstractFloat}\n\nCalculate longwave radiation absorption inside building considering both sunlit and shaded walls.\n\nArguments\n\nTinwallsun: Temperature of sunlit wall [K]\nTinwallshd: Temperature of shaded wall [K]\nTceiling: Ceiling temperature [K]\nTground: Ground temperature [K]\nTintmass: Internal mass temperature [K]\nHbuild: Building height [m]\nWroof: Roof width [m]\nec: Ceiling emissivity\neg: Ground emissivity\nem: Internal mass emissivity\new: Wall emissivity\n\nReturns\n\nLWRinB::NamedTuple: Incoming longwave radiation for each surface [W/m²]\nLWRoutB::NamedTuple: Outgoing longwave radiation for each surface [W/m²]\nLWRabsB::NamedTuple: Absorbed longwave radiation for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.lwr_abs_indoors_no_int_mass-Union{Tuple{FT}, NTuple{9, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.lwr_abs_indoors_no_int_mass","text":"lwr_abs_indoors_no_int_mass(\n    Tinwallsun::FT,\n    Tinwallshd::FT,\n    Tceiling::FT,\n    Tground::FT,\n    Hbuild::FT,\n    Wroof::FT,\n    ec::FT,\n    eg::FT,\n    ew::FT\n) where {FT<:AbstractFloat}\n\nCalculate longwave radiation absorption inside building without internal mass.\n\nArguments\n\nTinwallsun: Temperature of sunlit wall [K]\nTinwallshd: Temperature of shaded wall [K]\nTceiling: Ceiling temperature [K]\nTground: Ground temperature [K]\nHbuild: Building height [m]\nWroof: Roof width [m]\nec: Ceiling emissivity\neg: Ground emissivity\new: Wall emissivity\n\nReturns\n\nLWRinB::NamedTuple: Incoming longwave radiation for each surface [W/m²]\nLWRoutB::NamedTuple: Outgoing longwave radiation for each surface [W/m²]\nLWRabsB::NamedTuple: Absorbed longwave radiation for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.sensible_heat_flux_building_interior-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.sensible_heat_flux_building_interior","text":"sensible_heat_flux_building_interior(\n    Tbin::FT,\n    Tinwallsun::FT,\n    Tinwallshd::FT,\n    Tceiling::FT,\n    Tinground::FT,\n    Tintmass::FT,\n    Twindow::FT\n) where {FT<:AbstractFloat}\n\nCalculate sensible heat flux from building surfaces to interior air.\n\nArguments\n\nTbin: Building interior air temperature [K]\nTinwallsun: Interior sunlit wall temperature [K]\nTinwallshd: Interior shaded wall temperature [K]\nTceiling: Ceiling temperature [K]\nTinground: Interior ground temperature [K]\nTintmass: Internal mass temperature [K]\nTwindow: Window temperature [K]\n\nReturns\n\nHbinWallSun::FT: Sensible heat flux from sunlit wall [W/m²]\nHbinWallshd::FT: Sensible heat flux from shaded wall [W/m²]\nHBinRoof::FT: Sensible heat flux from roof [W/m²]\nHBinGround::FT: Sensible heat flux from ground [W/m²]\nHbinIntMass::FT: Sensible heat flux from internal mass [W/m²]\nHbinWindow::FT: Sensible heat flux from window [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.swr_abs_building_half-Union{Tuple{FT}, NTuple{15, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.swr_abs_building_half","text":"swr_abs_building_half(\n    A_c::FT,\n    A_g::FT,\n    A_h::FT,\n    SWRinW::FT,\n    F_gc::FT,\n    F_gw::FT,\n    F_ww::FT,\n    F_wg::FT,\n    F_wc::FT,\n    F_cg::FT,\n    F_cw::FT,\n    abc::FT,\n    abw::FT,\n    abm::FT,\n    abg::FT\n) where {FT<:AbstractFloat}\n\nCalculate shortwave radiation absorption in building for half of the building.\n\nArguments\n\nA_c: Ceiling area [m²]\nA_g: Ground area [m²]\nA_h: Wall area [m²]\nSWRinW: Incoming shortwave radiation on wall [W/m²]\nF_gc: View factor ground to ceiling\nF_gw: View factor ground to wall\nF_ww: View factor wall to wall\nF_wg: View factor wall to ground\nF_wc: View factor wall to ceiling\nF_cg: View factor ceiling to ground\nF_cw: View factor ceiling to wall\nabc: Ceiling albedo\nabw: Wall albedo\nabm: Internal mass albedo\nabg: Ground albedo\n\nReturns\n\nSWRinB::NamedTuple: Incoming shortwave radiation for each surface [W/m²]\nSWRoutB::NamedTuple: Outgoing shortwave radiation for each surface [W/m²]\nSWRabsB::NamedTuple: Absorbed shortwave radiation for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.swr_abs_indoors-Union{Tuple{FT}, NTuple{8, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.swr_abs_indoors","text":"swr_abs_indoors(\n    SWRinWsun::FT,\n    SWRinWshd::FT,\n    Hbuild::FT,\n    Wroof::FT,\n    abc::FT,\n    abw::FT,\n    abg::FT,\n    abm::FT\n) where {FT<:AbstractFloat}\n\nCalculate shortwave radiation absorption inside building.\n\nArguments\n\nSWRinWsun: Incoming shortwave radiation on sunlit wall [W/m²]\nSWRinWshd: Incoming shortwave radiation on shaded wall [W/m²]\nHbuild: Building height [m]\nWroof: Roof width [m]\nabc: Ceiling albedo\nabw: Wall albedo\nabg: Ground albedo\nabm: Internal mass albedo\n\nReturns\n\nSWRinB::NamedTuple: Incoming shortwave radiation for each surface [W/m²]\nSWRoutB::NamedTuple: Outgoing shortwave radiation for each surface [W/m²]\nSWRabsB::NamedTuple: Absorbed shortwave radiation for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.BuildingEnergyModel.swr_abs_indoors_no_int_mass-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.BuildingEnergyModel.swr_abs_indoors_no_int_mass","text":"swr_abs_indoors_no_int_mass(\n    SWRinWsun::FT,\n    SWRinWshd::FT,\n    Hbuild::FT,\n    Wroof::FT,\n    abc::FT,\n    abw::FT,\n    abg::FT\n) where {FT<:AbstractFloat}\n\nCalculate shortwave radiation absorption inside building without internal mass.\n\nArguments\n\nSWRinWsun: Incoming shortwave radiation on sunlit wall [W/m²]\nSWRinWshd: Incoming shortwave radiation on shaded wall [W/m²]\nHbuild: Building height [m]\nWroof: Roof width [m]\nabc: Ceiling albedo [-]\nabw: Wall albedo [-]\nabg: Ground albedo [-]\n\nReturns\n\nSWRinB::NamedTuple: Incoming shortwave radiation for each surface [W/m²]\nSWRoutB::NamedTuple: Outgoing shortwave radiation for each surface [W/m²]\nSWRabsB::NamedTuple: Absorbed shortwave radiation for each surface [W/m²]\nSWREBB::NamedTuple: Energy balance for each surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Conductive-Heat","page":"Reference","title":"Conductive Heat","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_green_roof-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, NamedTuple, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_green_roof","text":"conductive_heat_flux_green_roof(\n    TemperatureR::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    Owater::NamedTuple,\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParCalculation::NamedTuple,\n    BEM_on::Bool\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux through a green roof.\n\nArguments\n\ntemperature_r: Surface temperature of roof [K]\ntemperature_b: Interior temperature in the building [K]\ntemp_vec_ittm: Temperature vectors at previous time step\nanthropogenic: Anthropogenic parameters\nowater: Water content parameters\npar_veg_roof: Vegetation parameters for roof\npar_soil_roof: Soil parameters for roof\npar_thermal_roof: Thermal parameters for roof\npar_calculation: Calculation parameters\nbem_on: Building Energy Model switch (0/1)\n\nReturns\n\nG1::FT: Heat flux from surface to concrete interior [W/m²]\nG2::FT: Heat flux from concrete interior to building interior [W/m²]\ndS::FT: Energy storage in the roof [J/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_fr-Union{Tuple{FT}, Tuple{Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_fr","text":"conductive_heat_flux_ground_fr(\n    TemperatureC::Vector{FT},\n    TempDamp_ittm::NamedTuple,\n    TempVec_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    ParCalculation::NamedTuple,\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT}\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux for ground with fraction-resolved temperature.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTempDamp_ittm: Temperature damping vectors at previous time step\nTempVec_ittm: Temperature vectors at previous time step\nOwater_ittm: Water content vectors at previous time step\nParCalculation: Calculation parameters\nParThermalGround: Ground thermal parameters\nFractionsGround: Ground surface fractions\nParSoilGround: Ground soil parameters\nParVegTree: Tree vegetation parameters\nParVegGround: Ground vegetation parameters\n\nReturns\n\nG::FT: Ground heat flux [W/m²]\nTdp::FT: Damping temperature [K]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_imp-Union{Tuple{FT}, Tuple{Vector{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_imp","text":"conductive_heat_flux_ground_imp(\n    TemperatureC::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    ParThermalGround::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParCalculation::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux through impervious ground.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTempVec_ittm: Temperature vectors at previous time step\nParThermalGround: Thermal parameters for ground\nParSoilGround: Soil parameters for ground\nParCalculation: Calculation parameters\n\nReturns\n\nG1::FT: Heat flux from surface to concrete interior [W/m²]\nG2::FT: Heat flux from concrete interior to deep soil [W/m²]\ndS::FT: Energy storage in the ground [J/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_vb-Union{Tuple{FT}, Tuple{Vector{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_ground_vb","text":"conductive_heat_flux_ground_vb(\n    TemperatureC::Vector{FT},\n    TempDamp_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    TempVec_ittm::NamedTuple,\n    ParCalculation::NamedTuple,\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    type::Int\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux for bare/vegetated ground fractions.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTempDamp_ittm: Temperature damping vectors at previous time step\nOwater_ittm: Water content vectors at previous time step\nTempVec_ittm: Temperature vectors at previous time step\nParCalculation: Calculation parameters\nParSoilGround: Ground soil parameters\nParVegGround: Ground vegetation parameters\nParVegTree: Tree vegetation parameters\nFractionsGround: Ground surface fractions\ntype: 0 for bare ground, 1 for vegetated ground\n\nReturns\n\nG::FT: Ground heat flux [W/m²]\nTdp::FT: Damping temperature [K]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_roof_imp-Union{Tuple{FT}, Tuple{Vector{FT}, Union{Vector{FT}, FT}, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_roof_imp","text":"conductive_heat_flux_roof_imp(\n    TemperatureR::Vector{FT},\n    TemperatureB::Union{FT, Vector{FT}},\n    TempVec_ittm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParThermalRoof::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParCalculation::NamedTuple,\n    BEM_on::Bool\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux through an impervious roof.\n\nArguments\n\nTemperatureR: Surface temperature of roof [K]\nTemperatureB: Interior temperature in the building [K]\nTempVec_ittm: Temperature vectors at previous time step\nAnthropogenic: Anthropogenic parameters\nParThermalRoof: Thermal parameters for roof\nParSoilRoof: Soil parameters for roof\nParCalculation: Calculation parameters\nBEM_on: Building Energy Model switch (true/false)\n\nReturns\n\nG1: Heat flux from surface to concrete interior [W/m²]\nG2: Heat flux from concrete interior to building interior [W/m²]\ndS: Energy storage in the roof [J/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_walls-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties{FT}, NamedTuple, NamedTuple, Bool, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.conductive_heat_flux_walls","text":"conductive_heat_flux_walls(\n    TemperatureC::Vector{FT},\n    TemperatureB::Vector{FT},\n    TempVec_ittm::NamedTuple,\n    TempVecB_ittm::NamedTuple,\n    Anthropogenic::NamedTuple,\n    ParThermalWall::ModelComponents.Parameters.LocationSpecificThermalProperties{FT},\n    WallLayers::NamedTuple,\n    ParCalculation::NamedTuple,\n    type::Bool,\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool\n) where {FT<:AbstractFloat}\n\nCalculate conductive heat flux through walls.\n\nArguments\n\nTemperatureC: Canyon temperatures vector\nTemperatureB: Building temperatures vector\nTempVec_ittm: Temperature vectors at previous time step\nTempVecB_ittm: Building temperature vectors at previous time step\nAnthropogenic: Anthropogenic parameters\nParThermalWall: Thermal parameters for wall\nWallLayers: Wall layer parameters\nParCalculation: Calculation parameters\ntype: 1 for sunlit wall, 0 for shaded wall\nParWindows: Window parameters\nBEM_on: Building Energy Model switch\n\nReturns\n\nG1::FT: Heat flux from surface to concrete interior [W/m²]\nG2::FT: Heat flux from concrete interior to building interior [W/m²]\ndS::FT: Energy storage in the wall [J/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.ConductiveHeat.soil_heat-Union{Tuple{FT}, Tuple{Int64, Vararg{FT, 4}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.ConductiveHeat.soil_heat","text":"soil_heat(dt::Int, Ts::FT, Tstm1::FT, Tdptm1::FT, CTt::FT)\n\nCompute soil heat flux and depth temperature using force-restore method.\n\nArguments\n\ndt: time step [s]\nTs: surface temperature [°C]\nTstm1: surface temperature at previous step [°C]\nTdptm1: depth temperature at previous step [°C]\nCTt: total thermal capacity of soil or water [K m²/J]\n\nReturns\n\nG::FT: soil heat flux [W/m²]\nTdp::FT: depth temperature [°C]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Mean-Radiant-Temperature","page":"Reference","title":"Mean Radiant Temperature","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.MeanRadiantTemperature.mean_radiant_temperature-Union{Tuple{FT}, Tuple{NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactorPoint{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, NamedTuple, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.MeanRadiantTemperature.mean_radiant_temperature","text":"mean_radiant_temperature(\n    SWRout_t::NamedTuple,\n    LWRout_t::NamedTuple,\n    MeteoData::NamedTuple,\n    ViewFactorPoint::ModelComponents.Parameters.ViewFactorPoint{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    Geometry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    SunPosition::NamedTuple,\n    Person::NamedTuple,\n) where {FT<:AbstractFloat}\n\nCalculate mean radiant temperature for a person in an urban canyon.\n\nArguments\n\nSWRout_t: Outgoing shortwave radiation\nLWRout_t: Outgoing longwave radiation\nMeteoData: Meteorological data\nViewFactorPoint: View factors from point to surfaces\nParTree: Tree presence parameters\nParVegTree: Tree vegetation parameters\nGeometry_m: Urban geometry parameters\nSunPosition: Solar position parameters\nPerson: Person position parameters\n\nReturns\n\nTmrt::FT: Mean radiant temperature [°C]\nBooleanInSun::FT: Factor indicating if person is in sun [0-1]\nSWRdir_Person::FT: Direct shortwave radiation on person [W/m²]\nSWRdir_in_top::FT: Direct radiation on top surface [W/m²]\nSWRdir_in_bottom::FT: Direct radiation on bottom surface [W/m²]\nSWRdir_in_east::FT: Direct radiation on east surface [W/m²]\nSWRdir_in_south::FT: Direct radiation on south surface [W/m²]\nSWRdir_in_west::FT: Direct radiation on west surface [W/m²]\nSWRdir_in_north::FT: Direct radiation on north surface [W/m²]\nSWRdiff_Person::FT: Diffuse shortwave radiation on person [W/m²]\nLWR_Person::FT: Longwave radiation on person [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.MeanRadiantTemperature.person_in_shade-Union{Tuple{FT}, Tuple{Bool, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, FT, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.MeanRadiantTemperature.person_in_shade","text":"person_in_shade(\n    trees::Bool,\n    h_can::FT,\n    w_can::FT,\n    d_tree::FT,\n    h_tree::FT,\n    r_tree::FT,\n    theta_Z::FT,\n    theta_n::FT,\n    h_P::FT,\n    x_P::FT,\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    Wcan::FT,\n    TimeOfMaxSolAlt::FT,\n    TimeHr::FT,\n) where {FT<:AbstractFloat}\n\nDetermine if a person is in shade.\n\nArguments\n\ntrees: Trees present in canyon\nh_can: Normalized building height [-]\nw_can: Normalized street width [-]\nd_tree: Location of trees in canyon (tree-wall distance) [-]\nh_tree: Height of trees (vertical level at crown center) [-]\nr_tree: Size of tree crown (crown radius) [-]\ntheta_Z: Solar zenith angle [rad]\ntheta_n: Difference between solar azimuth angle and canyon orientation [rad]\nh_P: Vertical position of person Hp[m]/Wcan[m] [-]\nx_P: Relative position within canyon (0=left edge, 1=right edge) [-]\nParVegTree: Tree vegetation parameters\nWcan: Canyon width [m]\nTimeOfMaxSolAlt: Time of maximum solar altitude [h]\nTimeHr: Current time [h]\n\nReturns\n\nBooleanInSun::FT: Factor indicating if person is in sun (0=shade, 1=sun, 0-1=partial)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.MeanRadiantTemperature.swr_diff_person-Union{Tuple{FT}, Tuple{NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactorPoint{FT}, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.MeanRadiantTemperature.swr_diff_person","text":"swr_diff_person(\n    SWRout_t::NamedTuple,\n    LWRout_t::NamedTuple,\n    MeteoData::NamedTuple,\n    ViewFactorPoint::RayTracing.ViewFactorPoint{FT},\n    TimeOfMaxSolAlt::FT,\n    TimeHr::FT,\n) where {FT<:AbstractFloat}\n\nCalculate diffuse shortwave and longwave radiation onto point.\n\nArguments\n\nSWRout_t: Outgoing shortwave radiation from surfaces [W/m²]\nLWRout_t: Outgoing longwave radiation from surfaces [W/m²]\nMeteoData: Meteorological data\nViewFactorPoint: View factors from point to surfaces\nTimeOfMaxSolAlt: Time of maximum solar altitude [h]\nTimeHr: Current time [h]\n\nReturns\n\nSWRdiff_Person::FT: Diffuse shortwave radiation at point [W/m²]\nLWR_Person::FT: Longwave radiation at point [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.MeanRadiantTemperature.swr_dir_person-Union{Tuple{FT}, NTuple{4, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.MeanRadiantTemperature.swr_dir_person","text":"swr_dir_person(\n    SWR_dir::FT,\n    zeta_S::FT,\n    theta_Z::FT,\n    BooleanInSun::FT,\n) where {FT<:AbstractFloat}\n\nCalculate direct shortwave radiation onto person.\n\nArguments\n\nSWR_dir: Direct shortwave radiation [W/m²]\nzeta_S: Solar azimuth angle [rad]\ntheta_Z: Solar zenith angle [rad]\nBooleanInSun: Person is in sun, partially, or in shade (0=shade, 1=sun, 0-1=partial)\n\nReturns\n\nSWRdir_Person::FT: Direct shortwave radiation on person [W/m²]\nSWRdir_in_top::FT: Direct radiation on top surface [W/m²]\nSWRdir_in_bottom::FT: Direct radiation on bottom surface [W/m²]\nSWRdir_in_east::FT: Direct radiation on east surface [W/m²]\nSWRdir_in_south::FT: Direct radiation on south surface [W/m²]\nSWRdir_in_west::FT: Direct radiation on west surface [W/m²]\nSWRdir_in_north::FT: Direct radiation on north surface [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Outdoor-Thermal-Comfort","page":"Reference","title":"Outdoor Thermal Comfort","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.OutdoorThermalComfort.saturation_vapor_pressure-Tuple{FT} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.OutdoorThermalComfort.saturation_vapor_pressure","text":"saturation_vapor_pressure(ta::FT) where {FT<:AbstractFloat}\n\nCalculate saturation vapor pressure over water in hPa for input air temperature in Celsius.\n\nArguments\n\nta: Air temperature [°C]\n\nReturns\n\nesat::FT: Saturation vapor pressure [hPa]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.OutdoorThermalComfort.utci_approx-Union{Tuple{FT}, NTuple{4, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.OutdoorThermalComfort.utci_approx","text":"utci_approx(\n    Ta::FT,\n    RH::FT,\n    Tmrt::FT,\n    va::FT\n) where {FT<:AbstractFloat}\n\nCalculate Universal Thermal Climate Index (UTCI) using polynomial approximation.\n\nArguments\n\nTa: Air temperature [°C]\nRH: Relative humidity [%]\nTmrt: Mean radiant temperature [°C]\nva: Wind speed at 10m height [m/s]\n\nReturns\n\nUTCI::FT: Universal Thermal Climate Index [°C]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Radiation","page":"Reference","title":"Radiation","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.Radiation.RadiationFluxes","page":"Reference","title":"UrbanTethysChloris.Radiation.RadiationFluxes","text":"RadiationFluxes{FT<:AbstractFloat}\n\nStructure representing radiation flux components in an urban canyon.\n\nFields\n\nGroundImp: Radiation for impervious ground surface [W/m²]\nGroundBare: Radiation for bare ground surface [W/m²]\nGroundVeg: Radiation for vegetated ground surface [W/m²]\nTree: Radiation for tree surface [W/m²]\nWallSun: Radiation for sunlit wall surface [W/m²]\nWallShade: Radiation for shaded wall surface [W/m²]\nTotalGround: Total radiation for all ground surfaces [W/m²]\nTotalCanyon: Total radiation for entire canyon [W/m²]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.Radiation.create_longwave_radiation-Union{Tuple{FT}, Tuple{Vector{FT}, FT, FT, FT, FT, FT, Union{Nothing, FT}, Bool, Bool, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.create_longwave_radiation","text":"create_longwave_radiation(\n    A_i::Vector{FT}, fgveg::FT, fgbare::FT, fgimp::FT,\n    h_can::FT, w_can::FT, A_t::Union{FT,Nothing},\n    Cimp::Bool, Cbare::Bool, Cveg::Bool\n) where {FT<:AbstractFloat}\n\nHelper function to create RadiationFluxes objects\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.direct_shortwave_surfaces-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, Bool, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.direct_shortwave_surfaces","text":"direct_shortwave_surfaces(\n    h_can::FT, w_can::FT, d_tree::FT, h_tree::FT, r_tree::FT,\n    theta_Z::FT, theta_n::FT, SWR_dir::FT, LAIt::FT, trees::Bool,\n    ParVegTree::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate direct shortwave radiation received by different urban canyon surfaces.\n\nArguments\n\nh_can: normalized building height [-]\nw_can: normalized street width [-]\nd_tree: location of trees in the canyon, tree-wall distance [-]\nh_tree: height of trees, vertical level at the crown center [-]\nr_tree: size of the tree crown, crown radius [-]\ntheta_Z: solar zenith angle [rad]\ntheta_n: difference between solar azimuth angle and canyon orientation [rad]\nSWR_dir: direct shortwave radiation W/m^2 of horizontal surfaces [W/m^2]\nLAIt: leaf area index of the tree [-]\ntrees: boolean indicating if trees are present\nParVegTree: named tuple containing vegetation parameters, including Kopt\n\nReturns\n\nSWRdir_g: direct shortwave radiation received by the ground [W/m^2]\nSWRdir_wsun: direct shortwave radiation received by the sunlit wall [W/m^2]\nSWRdir_wshd: direct shortwave radiation received by the shaded wall [W/m^2]\nSWRdir_t: direct shortwave radiation received by the tree [W/m^2]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.direct_shortwave_trees-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.direct_shortwave_trees","text":"direct_shortwave_trees(h_can::FT, d_tree::FT, h_tree::FT, r_tree::FT, theta_Z::FT, theta_n::FT, SWR_dir::FT) where {FT<:AbstractFloat}\n\nCalculate direct shortwave radiation received by two trees in an urban canyon.\n\nArguments\n\nh_can: normalized building height [-]\nd_tree: location of trees in the canyon, tree-wall distance [-]\nh_tree: height of trees, vertical level at the crown center [-]\nr_tree: size of the tree crown, crown radius [-]\ntheta_Z: solar zenith angle [rad]\ntheta_n: difference between solar azimuth angle and canyon orientation [rad]\nSWR_dir: direct shortwave radiation W/m^2 of horizontal surfaces [W/m^2]\n\nReturns\n\nSWR_tree1: direct shortwave radiation received by tree 1 per m^2 tree surface [W/m^2]\nSWR_tree2: direct shortwave radiation received by tree 2 per m^2 tree surface [W/m^2]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.interpolate-Union{Tuple{FT}, Tuple{UrbanTethysChloris.Radiation.RadiationFluxes{FT}, UrbanTethysChloris.Radiation.RadiationFluxes{FT}, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.interpolate","text":"interpolate(tree::RadiationFluxes{FT}, notree::RadiationFluxes{FT}, tree_fraction::FT) where {FT<:AbstractFloat}\n\nCombines radiation components from scenarios with and without trees based on the tree fraction.\n\nArguments\n\ntree: RadiationFluxes instance representing scenario with trees\nnotree: RadiationFluxes instance representing scenario without trees\ntree_fraction: Fraction of area covered by trees [0-1]\n\nReturns\n\nRadiationFluxes{FT}: Combined radiation components\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.longwave_absorbed_no_tree-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.RayTracing.ViewFactor{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.longwave_absorbed_no_tree","text":"longwave_absorbed_no_tree(\n        h_can::FT, w_can::FT, LWR::FT,\n        fgveg::FT, fgbare::FT, fgimp::FT,\n        ew::FT, egveg::FT, egbare::FT, egimp::FT,\n        Tgimp::FT, Tgbare::FT, Tgveg::FT,\n        Twsun::FT, Twshade::FT,\n        view_factor::ViewFactor{FT}\n) where {FT<:AbstractFloat}\n\nCalculate longwave radiation exchange in an urban canyon without trees.\n\nArguments\n\nh_can: Building height [-]\nw_can: Ground width [-]\nLWR: Atmospheric longwave radiation [W/m²]\nfgveg: Partitioning ground vegetation [-]\nfgbare: Partitioning ground bare [-]\nfgimp: Partitioning ground impervious [-]\new: Wall emissivity [-]\negveg: Ground vegetation emissivity [-]\negbare: Ground bare emissivity [-]\negimp: Ground impervious emissivity [-]\nTgimp: Temperature of ground impervious [K]\nTgbare: Temperature of ground bare [K]\nTgveg: Temperature of ground vegetated [K]\nTwsun: Temperature of wall sun [K]\nTwshade: Temperature of wall shade [K]\nview_factor: View factors for radiation exchange\n\nReturns\n\nTuple of (LWRinnT, LWRoutnT, LWRabs_nT) containing longwave radiation components\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.longwave_absorbed_with_trees-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.RayTracing.ViewFactor{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.longwave_absorbed_with_trees","text":"longwave_absorbed_with_trees(\n        h_can::FT, w_can::FT, r_tree::FT, LWR::FT,\n        fgveg::FT, fgbare::FT, fgimp::FT,\n        ew::FT, et::FT, egveg::FT, egbare::FT, egimp::FT,\n        Tgimp::FT, Tgbare::FT, Tgveg::FT,\n        Twsun::FT, Twshade::FT, Ttree::FT,\n        view_factor::ViewFactor{FT}\n) where {FT<:AbstractFloat}\n\nCalculate longwave radiation exchange in an urban canyon with trees.\n\nArguments\n\nh_can: Building height [-]\nw_can: Ground width [-]\nr_tree: Size of the tree crown, crown radius [-]\nLWR: Atmospheric longwave radiation [W/m²]\nfgveg: Partitioning ground vegetation [-]\nfgbare: Partitioning ground bare [-]\nfgimp: Partitioning ground impervious [-]\new: Wall emissivity [-]\net: Tree emissivity [-]\negveg: Ground vegetation emissivity [-]\negbare: Ground bare emissivity [-]\negimp: Ground impervious emissivity [-]\nTgimp: Temperature of ground impervious [K]\nTgbare: Temperature of ground bare [K]\nTgveg: Temperature of ground vegetated [K]\nTwsun: Temperature of wall sun [K]\nTwshade: Temperature of wall shade [K]\nTtree: Temperature of tree [K]\nview_factor: View factors for radiation exchange\n\nReturns\n\nTuple of (LWRinT, LWRoutT, LWRabsT, LWREBT) containing longwave radiation components\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.shadow_length_no_tree-Union{Tuple{FT}, NTuple{4, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.shadow_length_no_tree","text":"shadow_length_no_tree(h_can::FT, w_can::FT, theta_Z::FT, theta_n::FT) where {FT<:AbstractFloat}\n\nCalculate shadow lengths in an urban canyon without trees.\n\nArguments\n\nh_can: normalized building height [-]\nw_can: normalized street width [-]\ntheta_Z: solar zenith angle [rad]\ntheta_n: difference between solar azimuth angle and canyon orientation [rad]\n\nReturns\n\nX_Shadow: fraction of ground that is shaded [0-1]\nX_tree: fraction of ground that is shaded by tree [0-1]\nn_Shadow: fraction of wall that is shaded [0-1]\nn_tree: fraction of wall that is shaded by tree [0-1]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.shadow_length_with_trees-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.shadow_length_with_trees","text":"shadow_length_with_trees(h_can::FT, w_can::FT, d_tree::FT, h_tree::FT, r_tree::FT, theta_Z::FT, theta_n::FT) where {FT<:AbstractFloat}\n\nCalculate shadow lengths in an urban canyon with trees.\n\nArguments\n\nh_can: normalized building height [-]\nw_can: normalized street width [-]\nd_tree: location of trees in the canyon, tree-wall distance [-]\nh_tree: height of trees, vertical level at the crown center [-]\nr_tree: size of the tree crown, crown radius [-]\ntheta_Z: solar zenith angle [rad]\ntheta_n: difference between solar azimuth angle and canyon orientation [rad]\n\nReturns\n\nX_Shadow: fraction of ground that is shaded [0-1]\nX_tree: fraction of ground that is shaded by tree [0-1]\nn_Shadow: fraction of wall that is shaded [0-1]\nn_tree: fraction of wall that is shaded by tree [0-1]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.shortwave_absorbed_no_trees-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.shortwave_absorbed_no_trees","text":"shortwave_absorbed_no_trees(\n    h_can::FT, w_can::FT,\n    fgveg::FT, fgbare::FT, fgimp::FT,\n    awraw::FT, agveg::FT, agbare::FT, agimp::FT,\n    SWR_dir::FT, SWR_diff::FT,\n    theta_z::FT, theta_n::FT,\n    view_factor::ViewFactor{FT},\n    ParVegTree::VegetationParams{FT},\n    ParWindows::WindowParams{FT},\n    bem_enabled::Bool\n) where {FT<:AbstractFloat}\n\nCalculate shortwave radiation exchange in an urban canyon without trees.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.shortwave_absorbed_with_trees-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.shortwave_absorbed_with_trees","text":"shortwave_absorbed_with_trees(\n        h_can::FT, w_can::FT, h_tree::FT, r_tree::FT, d_tree::FT,\n        fgveg::FT, fgbare::FT, fgimp::FT,\n        awraw::FT, agveg::FT, agbare::FT, agimp::FT, at::FT,\n        LAIt::FT, SWR_dir::FT, SWR_diff::FT,\n        theta_Z::FT, theta_n::FT,\n        view_factor::ViewFactor{FT},\n        ParVegTree::VegetationParams{FT},\n        ParWindows::WindowParams{FT},\n        bem_enabled::Bool\n) where {FT<:AbstractFloat}\n\nCalculate shortwave radiation exchange in an urban canyon with trees.\n\nReturns\n\nTuple of (SWRinT, SWRoutT, SWRabsT, SWRabsDirT, SWRabsDiffT, SWREBT, albedo_canyon)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.total_longwave_absorbed-Union{Tuple{FT}, Tuple{AbstractVector{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, FT, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.RayTracing.ViewFactor{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.total_longwave_absorbed","text":"total_longwave_absorbed(\n    temperature_c::AbstractMatrix{FT},\n    geometry::UrbanGeometryParameters{FT},\n    LWR::FT,\n    fractions_ground::LocationSpecificSurfaceFractions{FT},\n    prop_optical_ground::VegetatedOpticalProperties{FT},\n    prop_optical_wall::SimpleOpticalProperties{FT},\n    prop_optical_tree::SimpleOpticalProperties{FT},\n    view_factor::ViewFactor{FT}\n) where {FT<:AbstractFloat}\n\nCalculate total longwave radiation absorption for urban surfaces.\n\nArguments\n\ntemperature_c: Matrix of temperatures for each surface [K]\ngeometry: Urban geometry parameters\nLWR: Atmospheric longwave radiation [W/m²]\nfractions_ground: Ground surface fractions\nprop_optical_ground: Ground optical properties\nprop_optical_wall: Wall optical properties\nprop_optical_tree: Tree optical properties\nview_factor: View factors between surfaces\n\nReturns\n\nTuple of (LWRint, LWRoutt, LWRabst, LWREBt)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Radiation.total_shortwave_absorbed-Union{Tuple{FT}, Tuple{UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Radiation.total_shortwave_absorbed","text":"total_shortwave_absorbed(\n    geometry::UrbanGeometryParameters{FT},\n    SWR_dir::FT,\n    SWR_diff::FT,\n    theta_n::FT,\n    theta_Z::FT,\n    fractions_ground::LocationSpecificSurfaceFractions{FT},\n    prop_optical_ground::VegetatedOpticalProperties{FT},\n    prop_optical_wall::SimpleOpticalProperties{FT},\n    prop_optical_tree::SimpleOpticalProperties{FT},\n    par_veg_tree::HeightDependentVegetationParameters{FT},\n    view_factor::ViewFactor{FT},\n    par_windows::WindowParameters{FT},\n    bem_enabled::Bool\n) where {FT<:AbstractFloat}\n\nCalculate total shortwave radiation absorption for urban surfaces.\n\nArguments\n\ngeometry: Urban geometry parameters\nSWR_dir: Direct shortwave radiation [W/m²]\nSWR_diff: Diffuse shortwave radiation [W/m²]\ntheta_n: Solar zenith angle [rad]\ntheta_Z: Solar azimuth angle [rad]\nfractions_ground: Ground surface fractions\nprop_optical_ground: Ground optical properties\nprop_optical_wall: Wall optical properties\nprop_optical_tree: Tree optical properties\npar_veg_tree: Tree vegetation parameters\nview_factor: View factors between surfaces\npar_windows: Window parameters\nbem_enabled: Whether building energy model is enabled\n\nReturns\n\nTuple of (SWRint, SWRoutt, SWRabst, SWRabsDirt, SWRabsDifft, SWREBt, albedo_canyon)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#RayTracing","page":"Reference","title":"RayTracing","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.ViewFactor","page":"Reference","title":"UrbanTethysChloris.RayTracing.ViewFactor","text":"ViewFactor{FT<:AbstractFloat} <: AbstractViewFactor{FT}\n\nView factors for radiation exchange between urban surfaces, combining cases with and without trees.\n\nFields\n\nWithout trees (nT)\n\nF_gs_nT: Ground to sky view factor\nF_gw_nT: Ground to wall view factor\nF_ww_nT: Wall to wall view factor\nF_wg_nT: Wall to ground view factor\nF_ws_nT: Wall to sky view factor\nF_sg_nT: Sky to ground view factor\nF_sw_nT: Sky to wall view factor\n\nWith trees (T)\n\nF_gs_T: Ground to sky view factor\nF_gt_T: Ground to tree view factor\nF_gw_T: Ground to wall view factor\nF_ww_T: Wall to wall view factor\nF_wt_T: Wall to tree view factor\nF_wg_T: Wall to ground view factor\nF_ws_T: Wall to sky view factor\nF_sg_T: Sky to ground view factor\nF_sw_T: Sky to wall view factor\nF_st_T: Sky to tree view factor\nF_tg_T: Tree to ground view factor\nF_tw_T: Tree to wall view factor\nF_ts_T: Tree to sky view factor\nF_tt_T: Tree to tree view factor\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.ViewFactorInternal","page":"Reference","title":"UrbanTethysChloris.RayTracing.ViewFactorInternal","text":"ViewFactorInternal{FT<:AbstractFloat} <: AbstractViewFactor{FT}\n\nView factors for internal surfaces in a building.\n\nFields\n\nF_gc: Internal ground to ceiling view factor\nF_gw: Internal ground to wall view factor\nF_ww: Internal wall to wall view factor\nF_wg: Internal wall to ground view factor\nF_wc: Internal wall to ceiling view factor\nF_cg: Internal ceiling to ground view factor\nF_cw: Internal ceiling to wall view factor\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.ViewFactorNoTrees","page":"Reference","title":"UrbanTethysChloris.RayTracing.ViewFactorNoTrees","text":"ViewFactorNoTrees{FT<:AbstractFloat} <: AbstractViewFactor{FT}\n\nView factors for radiation exchange between urban surfaces without trees.\n\nFields\n\nF_gs: Ground to sky view factor\nF_gw: Ground to wall view factor\nF_ww: Wall to wall view factor\nF_wg: Wall to ground view factor\nF_ws: Wall to sky view factor\nF_sg: Sky to ground view factor\nF_sw: Sky to wall view factor\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.ViewFactorPoint","page":"Reference","title":"UrbanTethysChloris.RayTracing.ViewFactorPoint","text":"ViewFactorPoint{FT<:AbstractFloat} <: AbstractViewFactor{FT}\n\nView factors from a single point to urban surfaces.\n\nFields\n\nF_pg: Point to ground view factor\nF_ps: Point to sky view factor\nF_pt: Point to tree view factor\nF_pwLeft: Point to left wall view factor\nF_pwRight: Point to right wall view factor\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.ViewFactorWithTrees","page":"Reference","title":"UrbanTethysChloris.RayTracing.ViewFactorWithTrees","text":"ViewFactorWithTrees{FT<:AbstractFloat} <: AbstractViewFactor{FT}\n\nView factors for radiation exchange between urban surfaces with trees.\n\nFields\n\nF_gs: Ground to sky view factor\nF_gt: Ground to tree view factor\nF_gw: Ground to wall view factor\nF_ww: Wall to wall view factor\nF_wt: Wall to tree view factor\nF_wg: Wall to ground view factor\nF_ws: Wall to sky view factor\nF_sg: Sky to ground view factor\nF_sw: Sky to wall view factor\nF_st: Sky to tree view factor\nF_tg: Tree to ground view factor\nF_tw: Tree to wall view factor\nF_ts: Tree to sky view factor\nF_tt: Tree to tree view factor\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.line_segment_intersect-Union{Tuple{FT}, Tuple{AbstractMatrix{FT}, AbstractMatrix{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.line_segment_intersect","text":"line_segment_intersect(XY1::AbstractMatrix{FT}, XY2::AbstractMatrix{FT})\nline_segment_intersect(XY1::SVector{4, FT}, SVector{4, FT})\n\nFind intersections between two sets of line segments in 2D space.\n\nArguments\n\nXY1: vector/matrix where each row is [x1 y1 x2 y2] representing a line segment\nXY2: vector/matrix where each row is [x1 y1 x2 y2] representing a line segment\n\nReturns\n\nA NamedTuple with fields:\n\nintAdjacencyMatrix: N1×N2 boolean matrix indicating intersecting segments\nintMatrixX: X coordinates of intersection points\nintMatrixY: Y coordinates of intersection points\nintNormalizedDistance1To2: Normalized distances from start of XY1 segments to intersections\nintNormalizedDistance2To1: Normalized distances from start of XY2 segments to intersections\nparAdjacencyMatrix: Boolean matrix indicating parallel segments\ncoincAdjacencyMatrix: Boolean matrix indicating coincident segments\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factor_internal-Union{Tuple{FT}, Tuple{FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factor_internal","text":"view_factor_internal(\n    Hbuild::FT,\n    Wroof::FT\n) where {FT<:AbstractFloat}\n\nCalculate view factors for internal building surfaces.\n\nArguments\n\nHbuild: Building/canyon height [m]\nWroof: Roof/canyon width [m]\n\nReturns\n\nViewFactor: View factors between internal surfaces\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_analytical-Union{Tuple{FT}, Tuple{FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_analytical","text":"view_factors_analytical(H::FT, W::FT) where {FT<:AbstractFloat}\n\nCompute analytical view factors without trees according to Harman et al. 2004\n\nArguments\n\nH: canyon height [m]\nW: canyon width [m]\n\nReturns\n\nViewFactorNoTrees: struct containing view factors\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_canyon-Union{Tuple{FT}, Tuple{UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}}, Tuple{UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}, Int64}, Tuple{UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}, Int64, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_canyon","text":"view_factors_canyon(\n    geometry::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    person::ModelComponents.Parameters.PersonParameters{FT},\n    mc_sample_size::Int = 1000,\n    n_rays::Int = 200\n) where {FT<:AbstractFloat}\n\nCalculate view factors for an urban street canyon, considering both cases with and without trees.\n\nArguments\n\ngeometry: Urban geometry parameters including canyon dimensions and tree properties\nperson: Parameters describing a person's position in the canyon\nmc_sample_size: Number of Monte Carlo samples for ray tracing (default: 1000)\nn_rays: Number of rays to emit per sample point (default: 200)\n\nReturns\n\nA tuple containing:\n\nvf: ViewFactor object containing both tree and no-tree view factors\nvf_point: Point-specific view factors\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_computation-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, FT, FT, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT, FT, FT, FT, Vector{FT}, Vector{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_computation","text":"view_factors_computation(\n    XSv::Vector{FT}, YSv::Vector{FT}, dmax::FT, sz::FT, dthe::Vector{FT},\n    x2::Vector{FT}, z2::Vector{FT}, x3::Vector{FT}, z3::Vector{FT},\n    x4::Vector{FT}, z4::Vector{FT}, xc::FT, yc::FT, r::FT, xc2::FT,\n    x5::Vector{FT}, z5::Vector{FT}\n) where {FT<:AbstractFloat}\nview_factors_computation(\n    XSv::Vector{FT}, YSv::Vector{FT}, dmax::FT, sz::FT, dthe::Matrix{FT},\n    x2::Vector{FT}, z2::Vector{FT}, x3::Vector{FT}, z3::Vector{FT},\n    x4::Vector{FT}, z4::Vector{FT}, xc::FT, yc::FT, r::FT, xc2::FT,\n    x5::Vector{FT}, z5::Vector{FT}\n) where {FT<:AbstractFloat}\n\nCompute view factors for urban canyon surfaces including trees.\n\nArguments\n\nXSv, YSv: Coordinates of emitting points on emitting surface\nx2,z2: Coordinates of ground surface\nx3,z3: Coordinates of first wall surface\nx4,z4: Coordinates of second wall surface\nxc,yc: Coordinates of centre tree 1\nxc2: x-coordinate of centre tree 2 (yc2 = yc)\nr: Radius of tree\nx5,z5: Coordinates of sky boundary points\ndmax: Maximum search distance\nsz: Search step size\ndthe: Angular resolution in radians\n\nReturns\n\nTuple of view factors (VG, VW1, VW2, VS, VT1, VT2) for:\n\nGround\nWall-1\nWall-2\nSky\nTree-1\nTree-2\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_geometry-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}, Int64, Int64, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_geometry","text":"view_factors_geometry(H::FT, W::FT, a::FT, ht::FT, d::FT, person::PersonParameters{FT},\n                     option_surface::Int, mc_sample_size::Int, n_rays::Int) where {FT<:AbstractFloat}\n\nCompute view factors for urban canyon geometry.\n\nArguments\n\nH: canyon height [m]\nW: canyon width [m]\na: normalized tree radius [-]\nht: normalized tree height [-]\nd: normalized tree distance from wall [-]\nperson: PersonParameters object containing position information\noption_surface: specifies emitting surface (1=wall1, 2=wall2, 3=ground, 4=tree1, 5=tree2, 6=sky, 7=point)\nmc_sample_size: number of emitting points per surface\nn_rays: number of rays emitted per point\n\nReturns\n\nTuple of view factors (VG, VW1, VW2, VS, VT1, VT2) for ground, walls, sky and trees\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_ray_tracing-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}, Int64, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_ray_tracing","text":"view_factors_ray_tracing(\n    H::FT,\n    W::FT,\n    a::FT,\n    ht::FT,\n    d::FT,\n    person::ModelComponents.Parameters.PersonParameters{FT},\n    mc_sample_size::Int,\n    n_rays::Int,\n) where {FT<:AbstractFloat}\n\nCalculate view factors for urban canyon surfaces using ray tracing method.\n\nArguments\n\nH: canyon height [m]\nW: canyon width [m]\na: normalized tree radius [-]\nht: normalized tree height [-]\nd: normalized tree distance from wall [-]\nperson: PersonParameters object containing position information\nmc_sample_size: number of Monte Carlo samples for ray tracing\nn_rays: number of rays to emit per sample point\n\nReturns\n\nTuple containing:\n\nvf: ViewFactorWithTrees object containing view factors between surfaces\nvfp: ViewFactorPoint object containing point-specific view factors\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.RayTracing.view_factors_ray_tracing_reciprocity-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.PersonParameters{FT}, Int64, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.RayTracing.view_factors_ray_tracing_reciprocity","text":"view_factors_ray_tracing_reciprocity(H::FT, W::FT, a::FT, ht::FT, d::FT, person::PersonParameters{FT},\n                       mc_sample_size::Int, n_rays::Int) where {FT<:AbstractFloat}\n\nCompute reciprocal view factors for urban canyon geometry.\n\nArguments\n\nH: canyon height [m]\nW: canyon width [m]\na: normalized tree radius [-]\nht: normalized tree height [-]\nd: normalized tree distance from wall [-]\nperson: PersonParameters object containing position information\nmc_sample_size: number of emitting points per surface\nn_rays: number of rays emitted per point\n\nReturns\n\nTuple containing (ViewFactorWithTrees, ViewFactorPoint, ViewFactorWithTrees)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Resistance","page":"Reference","title":"Resistance","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.Resistance.aerodynamic_resistance-Union{Tuple{FT}, NTuple{10, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.aerodynamic_resistance","text":"aerodynamic_resistance(Ta, Ts, Pre, zatm, disp_h, zom, zoh, Ws, ea)\n\nCalculate aerodynamic resistance from individual meteorological parameters.\n\nArguments\n\nTa: Air temperature [°C]\nTs: Surface temperature [°C]\nPre: Atmospheric pressure [hPa]\nzatm: Reference height [m]\ndisp_h: Zero plane displacement height [m]\nzom: Roughness length for momentum [m]\nzoh: Roughness length for heat [m]\nWs: Wind speed [m/s]\nea: Vapor pressure [Pa]\n\nReturns\n\nra: Aerodynamic resistance [s/m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.backcalculate_obhukov_length-Union{Tuple{FT}, NTuple{6, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.backcalculate_obhukov_length","text":"backcalculate_obhukov_length(\n    ra::FT,\n    zom::FT,\n    zoh::FT,\n    disp_h::FT,\n    zatm::FT,\n    u::FT\n) where {FT<:AbstractFloat}\n\nCalculate Monin-Obhukov length based on previously calculated ra to compute enhancement term due to non-local transport in the urban canopy.\n\nArguments\n\nra: Aerodynamic resistance [s/m]\nzom: Momentum roughness length [m]\nzoh: Heat roughness length [m]\ndisp_h: Displacement height [m]\nzatm: Atmospheric measurement height [m]\nu: Wind speed [m/s]\n\nReturns\n\nLAN: Monin-Obhukov length [m]\nDiff_ra: Difference in aerodynamic resistance [s/m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.businger_stability_functions-Tuple{FT} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.businger_stability_functions","text":"businger_stability_functions(y::FT) where {FT<:AbstractFloat}\n\nCalculate Businger stability functions for momentum and heat transfer.\n\nArguments\n\ny: Stability parameter [-]\n\nReturns\n\nFih: Heat stability function [-]\nFim: Momentum stability function [-]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.canopy_resistance_an_evolution-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, Int64, Vararg{FT, 15}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.canopy_resistance_an_evolution","text":"canopy_resistance_an_evolution(\n    PAR_sun::FT,\n    PAR_shd::FT,\n    LAI::FT,\n    Kopt::FT,\n    Knit::FT,\n    Fsun::FT,\n    Fshd::FT,\n    Citm1_sun::FT,\n    Citm1_shd::FT,\n    Ca::FT,\n    ra::FT,\n    rb::FT,\n    Ts::FT,\n    Ta::FT,\n    Pre::FT,\n    Ds::FT,\n    Psi_L::FT,\n    Psi_sto_50::FT,\n    Psi_sto_99::FT,\n    CT::Int,\n    Vmax::FT,\n    DS::FT,\n    Ha::FT,\n    FI::FT,\n    Oa::FT,\n    Do::FT,\n    a1::FT,\n    go::FT,\n    e_rel::FT,\n    e_relN::FT,\n    gmes::FT,\n    rjv::FT,\n    mSl::FT,\n    Sl::FT,\n    atol::FT\n) where {FT<:AbstractFloat}\n\nCalculate canopy resistance and assimilation.\n\nArguments\n\nPAR_sun: Photosynthetically active radiation for sunlit fraction [W/m²]\nPAR_shd: Photosynthetically active radiation for shaded fraction [W/m²]\nLAI: Leaf area index [-]\nKopt: Optical extinction coefficient [-]\nKnit: Nitrogen extinction coefficient [-]\nFsun: Sunlit fraction [-]\nFshd: Shaded fraction [-]\nCitm1_sun: Previous CO₂ concentration for sunlit fraction [μmolCO₂/mol]\nCitm1_shd: Previous CO₂ concentration for shaded fraction [μmolCO₂/mol]\nCa: Atmospheric CO₂ concentration [μmolCO₂/mol]\nra: Aerodynamic resistance [s/m]\nrb: Boundary layer resistance [s/m]\nTs: Surface temperature [°C]\nTa: Air temperature [°C]\nPre: Atmospheric pressure [hPa]\nDs: Vapor pressure deficit [Pa]\nPsi_L: Leaf water potential [MPa]\nPsi_sto_50: Water potential at 50% stomatal closure [MPa]\nPsi_sto_99: Water potential at 99% stomatal closure [MPa]\nCT: Photosynthesis type (1=C3, 2=C4)\nVmax: Maximum carboxylation rate [μmolCO₂/m²/s]\nDS: Deactivation entropy [kJ/mol/K]\nHa: Activation energy [kJ/mol]\nFI: Quantum yield [-]\nOa: Atmospheric O₂ concentration [μmolO₂/mol]\nDo: Empirical coefficient for stomatal response [Pa]\na1: Empirical coefficient for stomatal response [-]\ngo: Minimum stomatal conductance [mol/m²/s]\ne_rel: Age relative efficiency [-]\ne_relN: Nitrogen relative efficiency [-]\ngmes: Mesophyll conductance [mol/m²/s]\nrjv: Ratio of Jmax to Vmax [-]\nmSl: Empirical slope parameter [-]\nSl: Entropy parameter [kJ/mol/K]\natol: Absolute tolerance for CO₂ concentration solver\n\nReturns\n\nrs_sun: Sunlit stomatal resistance [s/m]\nrs_shd: Shaded stomatal resistance [s/m]\nCi_sun: Sunlit leaf internal CO₂ concentration [μmolCO₂/mol]\nCi_shd: Shaded leaf internal CO₂ concentration [μmolCO₂/mol]\nAn: Net assimilation [μmolCO₂/m²/s]\nRdark: Dark respiration [μmolCO₂/m²/s]\nLpho: Light use [W/m²]\nSIF: Solar-induced fluorescence [W/m²/sr/μm]\nDCi: Change in CO₂ concentration [μmolCO₂/mol]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.co2_concentration-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, Int64, Vararg{FT, 10}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.co2_concentration","text":"co2_concentration(\n    Cc::FT,\n    IPAR::FT,\n    Csl::FT,\n    ra::FT,\n    rb::FT,\n    Ts::FT,\n    Pre::FT,\n    Ds::FT,\n    Psi_L::FT,\n    Psi_sto_50::FT,\n    Psi_sto_99::FT,\n    CT::Int,\n    Vmax::FT,\n    DSE::FT,\n    Ha::FT,\n    FI::FT,\n    Oa::FT,\n    Do::FT,\n    a1::FT,\n    go::FT,\n    gmes::FT,\n    rjv::FT\n) where {FT<:AbstractFloat}\n\nCalculate CO₂ concentration difference for root finding in stomatal conductance calculations.\n\nArguments\n\nCc: Initial internal CO₂ concentration [μmolCO₂/mol]\nIPAR: Absorbed photosynthetically active radiation [W/m²]\nCsl: Atmospheric CO₂ concentration [μmolCO₂/mol]\nra: Aerodynamic resistance [s/m]\nrb: Leaf boundary layer resistance [s/m]\nTs: Leaf temperature [°C]\nPre: Atmospheric pressure [kPa]\nDs: Leaf-to-air vapor pressure deficit [Pa]\nPsi_L: Leaf water potential [MPa]\nPsi_sto_50: Leaf water potential at 50% stomatal closure [MPa]\nPsi_sto_99: Leaf water potential at 99% stomatal closure [MPa]\nCT: Photosynthesis model type (0 = C3, 1 = C4)\nVmax: Maximum carboxylation rate [μmolCO₂/m²s]\nDSE: Entropy term [J/mol/K]\nHa: Activation energy [J/mol]\nFI: Internal CO₂ to atmospheric CO₂ ratio [-]\nOa: Atmospheric O₂ concentration [mmol/mol]\nDo: Empirical coefficient for stomatal sensitivity to VPD [kPa]\na1: Empirical coefficient for stomatal conductance model [-]\ngo: Minimum stomatal conductance [mol/m²s]\ngmes: Mesophyll conductance [mol/m²s]\nrjv: Ratio of Jmax to Vmax [-]\n\nReturns\n\nDCi: Difference between input and calculated CO₂ concentrations [μmolCO₂/mol]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.enhancement_factor_ra_pleim-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.enhancement_factor_ra_pleim","text":"enhancement_factor_ra_pleim(\n    ra::FT,\n    zom::FT,\n    zoh::FT,\n    disp_h::FT,\n    zatm::FT,\n    Ws::FT,\n    hPBL::FT\n) where {FT<:AbstractFloat}\n\nCalculate enhancement factor for aerodynamic resistance according to Pleim et al. 2007.\n\nArguments\n\nra: Aerodynamic resistance [s/m]\nzom: Momentum roughness length [m]\nzoh: Heat roughness length [m]\ndisp_h: Displacement height [m]\nzatm: Atmospheric measurement height [m]\nWs: Wind speed [m/s]\nhPBL: Planetary boundary layer height [m]\n\nReturns\n\nfconv: Fraction of convective transport [-]\nra_enhanced: Enhanced aerodynamic resistance [s/m]\nra: Original aerodynamic resistance [s/m]\nLAN: Monin-Obhukov length [m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.in_canyon_aerodynamic_resistance-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, Symbol}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.in_canyon_aerodynamic_resistance","text":"in_canyon_aerodynamic_resistance(\n    uatm::FT,\n    Zatm::FT,\n    Ta::FT,\n    Ts::FT,\n    hcan_max::FT,\n    hcan::FT,\n    dcan::FT,\n    zomcan::FT,\n    Zref_und::FT,\n    zom_und::FT,\n    Zp1::FT,\n    Zp2::FT,\n    Zp3::FT,\n    Pre::FT,\n    ea::FT,\n    RoughnessParameter::Symbol\n) where {FT<:AbstractFloat}\n\nCalculate aerodynamic resistance within urban canyon.\n\nArguments\n\nuatm: Wind speed at atmospheric reference height [m/s]\nZatm: Atmospheric reference height [m]\nTa: Air temperature [°C]\nTs: Surface temperature [°C]\nhcan_max: Maximum canyon height [m]\nhcan: Urban canyon height [m]\ndcan: Urban canyon displacement height [m]\nzomcan: Urban roughness length [m]\nZref_und: Reference height within canyon [m]\nzom_und: Roughness length of ground surface [m]\nZp1: First height within canyon [m]\nZp2: Second height within canyon [m]\nZp3: Third height within canyon [m]\nPre: Atmospheric pressure [Pa]\nea: Vapor pressure [Pa]\nRoughnessParameter: Roughness parameterization type\n\nReturns\n\nrap_can: Urban undercanopy resistance from ground to displacement height [s/m]\nrap_Zp1: Undercanopy resistance from ground to Zp1 [s/m]\nrap_Zp1_In: Inverse resistance from Zp1 to displacement height [s/m]\nrap_Zp2: Undercanopy resistance from ground to Zp2 [s/m]\nrap_Zp2_In: Inverse resistance from Zp2 to displacement height [s/m]\nrap_Zp3: Undercanopy resistance from ground to Zp3 [s/m]\nrap_Zp3_In: Inverse resistance from Zp3 to displacement height [s/m]\nu_Hcan: Wind speed at canyon height [m/s]\nu_Zp1: Wind speed at Zp1 [m/s]\nu_Zp2: Wind speed at Zp2 [m/s]\nu_Zp3: Wind speed at Zp3 [m/s]\nuref_und: Wind speed at reference height [m/s]\nalpha: Canyon attenuation coefficient [-]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.precalculate_for_faster_numerical_solution-Union{Tuple{FT}, Tuple{Int64, Int64, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, UrbanTethysChloris.RayTracing.ViewFactor{FT}, UrbanTethysChloris.ModelComponents.Parameters.WindowParameters{FT}, Bool, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.precalculate_for_faster_numerical_solution","text":"precalculate_for_faster_numerical_solution(\n    ittn::Int,\n    ittm::Int,\n    TempVec_ittm::NamedTuple,\n    Humidity_ittm::NamedTuple,\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    HumidityAtm::NamedTuple,\n    geometry::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    PropOpticalGround::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    PropOpticalWall::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    PropOpticalTree::ModelComponents.Parameters.SimpleOpticalProperties{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SunPosition::NamedTuple,\n    ViewFactor::RayTracing.ViewFactor{FT},\n    ParWindows::ModelComponents.Parameters.WindowParameters{FT},\n    BEM_on::Bool,\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    PropOpticalRoof::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    RES::NamedTuple,\n) where {FT<:AbstractFloat}\n\nCalculate enhancement factor and precalculate stomatal resistances for faster numerical solution.\n\nArguments\n\nittn::Int: Current Newton iteration index\nittm::Int: Current time step index\nTempVec_ittm: Temperature vector containing surface temperatures\nHumidity_ittm: Humidity data structure\nParVegGround: Ground vegetation parameters\nSoilPotW_ittm: Soil water potential data\nCiCO2Leaf_ittm: Leaf CO2 concentration data\nMeteoData: Meteorological data structure\nHumidityAtm: Atmospheric humidity data structure\ngeometry: Urban geometry parameters\nFractionsGround: Ground surface fractions\nPropOpticalGround: Ground optical properties\nPropOpticalWall: Wall optical properties\nPropOpticalTree: Tree optical properties\nParVegTree: Tree vegetation parameters\nSunPosition: Sun position parameters\nViewFactor: View factors between urban surfaces\nParWindows: Window parameters\nBEM_on: Building energy model flag\nParVegRoof: Roof vegetation parameters\nPropOpticalRoof: Roof optical properties\nFractionsRoof: Roof surface fractions\nRES: Resistance values from previous iterations\n\nReturns\n\nfconv: Enhancement factor for convective resistance [-]\nrsRoofPreCalc: Named tuple with roof vegetation stomatal resistance parameters:\nrs_sun: Stomatal resistance for sunlit leaves [s/m]\nrs_shd: Stomatal resistance for shaded leaves [s/m]\nCi_sun: Internal CO2 concentration for sunlit leaves [ppm]\nCi_shd: Internal CO2 concentration for shaded leaves [ppm]\nrsGroundPreCalc: Named tuple with ground vegetation stomatal resistance parameters:\nrs_sun_L: Stomatal resistance for sunlit leaves [s/m]\nrs_shd_L: Stomatal resistance for shaded leaves [s/m]\nCi_sun_L: Internal CO2 concentration for sunlit leaves [ppm]\nCi_shd_L: Internal CO2 concentration for shaded leaves [ppm]\nrsTreePreCalc: Named tuple with tree stomatal resistance parameters:\nrs_sun_H: Stomatal resistance for sunlit leaves [s/m]\nrs_shd_H: Stomatal resistance for shaded leaves [s/m]\nCi_sun_H: Internal CO2 concentration for sunlit leaves [ppm]\nCi_shd_H: Internal CO2 concentration for shaded leaves [ppm]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.precalculate_stomatal_resistance_roof-Union{Tuple{FT}, Tuple{NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties{FT}, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.precalculate_stomatal_resistance_roof","text":"precalculate_stomatal_resistance_roof(\n    TempVec_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    HumidityAtm::NamedTuple,\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    SoilPotW_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    PropOpticalRoof::ModelComponents.Parameters.VegetatedOpticalProperties{FT},\n    ra::FT,\n    rb::FT\n) where {FT<:AbstractFloat}\n\nCalculate stomatal resistance for sunlit and shaded portions of the roof vegetation.\n\nArguments\n\nTempVec_ittm: Temperature vector containing roof vegetation temperature\nMeteoData: Meteorological data including atmospheric temperature, pressure, CO2 concentration\nHumidityAtm: Atmospheric humidity data structure with vapor pressure\nParVegRoof: Roof vegetation parameters including LAI, photosynthesis properties\nSoilPotW_ittm: Soil water potential data for roof vegetation\nCiCO2Leaf_ittm: Previous iteration leaf CO2 concentration data\nPropOpticalRoof: Roof optical properties for radiation absorption\nra: Aerodynamic resistance between roof and atmosphere [s/m]\nrb: Boundary layer resistance for roof vegetation [s/m]\n\nReturns\n\nrs_sun: Stomatal resistance for sunlit roof vegetation leaves [s/m]\nrs_shd: Stomatal resistance for shaded roof vegetation leaves [s/m]\nCi_sun: Internal CO2 concentration for sunlit roof vegetation leaves [ppm]\nCi_shd: Internal CO2 concentration for shaded roof vegetation leaves [ppm]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.process_leaf_fraction-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, Int64, Vararg{FT, 11}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.process_leaf_fraction","text":"process_leaf_fraction(\n    F::FT,\n    PAR::FT,\n    Citm1::FT,\n    Ca::FT,\n    ra::FT,\n    rb::FT,\n    Ts::FT,\n    Pre::FT,\n    Ds::FT,\n    Psi_L::FT,\n    Psi_sto_50::FT,\n    Psi_sto_99::FT,\n    CT::Int,\n    Vmax::FT,\n    DS::FT,\n    Ha::FT,\n    FI::FT,\n    Oa::FT,\n    Do::FT,\n    a1::FT,\n    go::FT,\n    gmes::FT,\n    rjv::FT,\n    atol::FT\n) where {FT<:AbstractFloat}\n\nProcess CO₂ assimilation for a leaf fraction (sunlit or shaded).\n\nArguments\n\nF: Leaf fraction [-]\nPAR: Photosynthetically active radiation [W/m²]\nCitm1: Previous CO₂ concentration [μmolCO₂/mol]\nCa: Atmospheric CO₂ concentration [μmolCO₂/mol]\nra: Aerodynamic resistance [s/m]\nrb: Boundary layer resistance [s/m]\nTs: Leaf temperature [K]\nPre: Atmospheric pressure [Pa]\nDs: Vapor pressure deficit [Pa]\nPsi_L: Leaf water potential [MPa]\nPsi_sto_50: 50% storage water potential [MPa]\nPsi_sto_99: 99% storage water potential [MPa]\nCT: Temperature coefficient\nVmax: Maximum carboxylation rate [μmolCO₂/m²/s]\nDS: Stomatal conductance [m/s]\nHa: Leaf area [m²]\nFI: Light intensity [μmol photons/m²/s]\nOa: Ambient oxygen concentration [μmolO₂/mol]\nDo: Diffusion coefficient [m²/s]\na1: Parameter for photosynthesis model\ngo: Stomatal conductance [m/s]\ngmes: Mesophyll conductance [m/s]\nrjv: Jmax/Rubisco parameter\natol: Absolute tolerance for root finding\n\nReturns\n\nCi: Leaf internal CO₂ concentration [μmolCO₂/mol]\nCiF: Leaf internal CO₂ concentration at equilibrium [μmolCO₂/mol]\nAn: Net assimilation rate [μmolCO₂/m²/s]\nrc: Canopy resistance [s/m]\nRdark: Dark respiration rate [μmolCO₂/m²/s]\nSIF: Solar-induced fluorescence [W/m²/sr/μm]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.solve_obhukov_length-Union{Tuple{FT}, NTuple{6, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.solve_obhukov_length","text":"solve_obhukov_length(LAN::FT, ra::FT, zom::FT, zoh::FT, z::FT, u::FT) where {FT<:AbstractFloat}\n\nCalculate residual for Monin-Obhukov length solver.\n\nArguments\n\nLAN: Monin-Obhukov length [m]\nra: Aerodynamic resistance [s/m]\nzom: Momentum roughness length [m]\nzoh: Heat roughness length [m]\nz: Reference height [m]\nu: Wind speed [m/s]\n\nReturns\n\nDiff_ra: Residual in aerodynamic resistance [s/m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.urban_roughness-Union{Tuple{FT}, Tuple{FT, FT, Bool, Bool, Bool}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.urban_roughness","text":"urban_roughness(\n    hc_H::FT,\n    hc_L::FT,\n    Csoil::Bool,\n    Croad::Bool,\n    Croof::Bool\n) where {FT<:AbstractFloat}\n\nCalculate urban surface roughness parameters.\n\nArguments\n\nhc_H: Canopy height of high vegetation layer [m]\nhc_L: Canopy height of low vegetation layer [m]\nCsoil: Presence of soil\nCroad: Presence of road\nCroof: Presence of roof\n\nReturns\n\nzom: Roughness momentum [m]\nzoh: Roughness heat [m]\nzom_ground: Ground roughness momentum [m]\nzoh_ground: Ground roughness heat [m]\ndisp_h: Maximum displacement height [m]\nzom_H: High vegetation roughness momentum [m]\nzom_L: Low vegetation roughness momentum [m]\nzoh_H: High vegetation roughness heat [m]\nzoh_L: Low vegetation roughness heat [m]\nd_H: High vegetation displacement height [m]\nd_L: Low vegetation displacement height [m]\nzom_other: Other urban surfaces roughness momentum [m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.wind_profile_canyon-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, Bool, Vararg{FT, 4}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.wind_profile_canyon","text":"wind_profile_canyon(\n    Hcan::FT,\n    Htree::FT,\n    R_tree::FT,\n    Wcan::FT,\n    Wroof::FT,\n    Kopt::FT,\n    LAI_t::FT,\n    Zatm::FT,\n    uatm::FT,\n    Zp::FT,\n    trees::Bool,\n    Zref_und::FT,\n    zom_und::FT,\n    Hcan_max::FT,\n    Hcan_std::FT\n) where {FT<:AbstractFloat}\n\nCalculate urban canyon wind profile parameters.\n\nArguments\n\nHcan: Canyon height [m]\nHtree: Tree height [m]\nR_tree: Tree radius [m]\nWcan: Canyon width [m]\nWroof: Roof width [m]\nKopt: Optical transmission factor [-]\nLAI_t: Tree leaf area index [-]\nZatm: Atmospheric reference height [m]\nuatm: Wind speed at atmospheric reference height [m/s]\nZp: Height of interest within canyon [m]\ntrees: Presence of trees\nZref_und: Reference height within canyon [m]\nzom_und: Roughness length of ground surface [m]\nHcan_max: Maximum canyon height [m]\nHcan_std: Standard deviation of canyon height [m]\n\nReturns\n\ndcan: Urban displacement height including trees [m]\nzomcan: Urban momentum roughness height including trees [m]\nu_Hcan_max: Wind speed at canyon height [m/s]\nu_Zp: Wind speed within canyon at height Zp [m/s]\nw_Zp: Vertical wind speed within canyon [m/s]\nalpha: Canyon attenuation coefficient [-]\nRoughnessParameter: Type of roughness parameterization used\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.wind_profile_point_output-Union{Tuple{FT}, Tuple{FT, Vararg{NamedTuple, 6}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.wind_profile_point_output","text":"wind_profile_point_output(\n    Zp::FT,\n    Gemeotry_m::NamedTuple,\n    ParVegTree::NamedTuple,\n    ParTree::NamedTuple,\n    MeteoData::NamedTuple,\n    FractionsGround::NamedTuple,\n    ParVegGround::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate wind speed at a specific height in urban canyon.\n\nArguments\n\nZp: Height of interest [m]\nGemeotry_m: Canyon geometry parameters\nParVegTree: Tree vegetation parameters\nParTree: Tree presence parameters\nMeteoData: Meteorological data\nFractionsGround: Ground fraction parameters\nParVegGround: Ground vegetation parameters\n\nReturns\n\nu_Zp: Wind speed at height Zp [m/s]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Resistance.wind_profile_roof-Union{Tuple{FT}, NTuple{7, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Resistance.wind_profile_roof","text":"wind_profile_roof(\n    Hcan::FT,\n    Zatm::FT,\n    uatm::FT,\n    zom::FT,\n    disp_h::FT,\n    hveg::FT,\n    Zp::FT\n) where {FT<:AbstractFloat}\n\nCalculate wind profile above roof surface.\n\nArguments\n\nHcan: Canyon height [m]\nZatm: Atmospheric reference height [m]\nuatm: Wind speed at atmospheric reference height [m/s]\nzom: Roughness length of roof cover [m]\ndisp_h: Displacement height [m]\nhveg: Vegetation height [m]\nZp: Height of interest [m]\n\nReturns\n\nu_Zp: Wind speed at height Zp [m/s]\nu_Hveg: Wind speed at vegetation top [m/s]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Soil","page":"Reference","title":"Soil","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.Soil.conductivity_suction-Union{Tuple{FT}, Tuple{Int64, Vararg{FT, 9}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.conductivity_suction","text":"conductivity_suction(\n    SPAR::Int,\n    Ks::FT,\n    Osat::FT,\n    Ohy::FT,\n    L::FT,\n    Pe::FT,\n    O33::FT,\n    alpVG::FT,\n    nVG::FT,\n    O::FT\n) where {FT<:AbstractFloat}\n\nconductivity_suction(\n    SPAR::Int,\n    Ks::FT,\n    Osat::FT,\n    Ohy::FT,\n    L::FT,\n    Pe::FT,\n    O33::FT,\n    alpVG::FT,\n    nVG::FT,\n    O::Vector{FT},\n) where {FT<:AbstractFloat}\n\nconductivity_suction(\n    SPAR::Int,\n    Ks::Vector{FT},\n    Osat::Vector{FT},\n    Ohy::Vector{FT},\n    L::Vector{FT},\n    Pe::Vector{FT},\n    O33::Vector{FT},\n    alpVG::Vector{FT},\n    nVG::Vector{FT},\n    O::Vector{FT},\n) where {FT<:AbstractFloat}\n\nweighted_conductivity_suction(\n    SPAR::Int,\n    Ks::Vector{FT},\n    Osat::Vector{FT},\n    Ohy::Vector{FT},\n    L::Vector{FT},\n    Pe::Vector{FT},\n    O33::Vector{FT},\n    alpVG::Vector{FT},\n    nVG::Vector{FT},\n    O::FT,\n    weights::Vector{FT},\n) where {FT<:AbstractFloat}\n\nCalculate soil hydraulic conductivity and matric suction using specified model.\n\nArguments\n\nSPAR: Soil parameterization choice:\nVan-Genuchten (1980) corrected\nSaxton-Rawls (1986)\nKs: Saturated hydraulic conductivity [mm/h]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nL: Lambda parameter for Saxton-Rawls model [-]\nPe: Air entry pressure [kPa]\nO33: Water content at -33 kPa [m³/m³]\nalpVG: Van Genuchten α parameter [1/mm]\nnVG: Van Genuchten n parameter [-]\nO: Current water content [m³/m³]\nweights: Weights for each soil layer [dimensionless]\n\nReturns\n\nKo: Unsaturated hydraulic conductivity [mm/h]\nPo: Matric potential [mm]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.evaporation_layers-Union{Tuple{FT}, Tuple{Vector{FT}, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.evaporation_layers","text":"evaporation_layers(Zs::Vector{FT}, Zdes::FT)\n\nCalculate the evaporation layer fraction for each soil layer based on the desorption depth.\n\nArguments\n\nZs::Vector{FT}: Vector of depth layers in mm, from top to bottom [1....m+1]\nZdes::FT: Depth of desorption in mm\n\nReturns\n\nEvL_Zs::Vector{FT}: Vector of evaporation layer fractions [1...m], where each element represents the fraction of evaporation for the corresponding layer\n\nNotes\n\nThe function checks if the desorption depth is within the valid range defined by the layers\nIf Zdes < first layer depth: returns zeros with error message \"ERROR FIRST LAYER TOO DEPTH\"\nIf Zdes > last layer depth: returns zeros with error message \"ERROR LAST LAYER TOO SHALLOW\"\nThe sum of all fractions equals 1 when Zdes is within valid range\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.infiltration-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, Int64, Vararg{FT, 5}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.infiltration","text":"infiltration(\n    Osat::FT,\n    Ohy::FT,\n    L::FT,\n    alpVG::FT,\n    nVG::FT,\n    Pe::FT,\n    Ks_Zs::FT,\n    O33::FT,\n    SPAR::Int,\n    O::FT,\n    Dz::FT,\n    WIS::FT,\n    cosalp::FT,\n    Pond::FT\n) where {FT<:AbstractFloat}\n\nCalculate infiltration rates based on soil parameters and conditions.\n\nArguments\n\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nL: Pore size distribution index [-]\nalpVG: van Genuchten α parameter [1/mm]\nnVG: van Genuchten n parameter [-]\nPe: Air entry pressure [kPa]\nKs_Zs: Saturated hydraulic conductivity [mm/h]\nO33: Water content at -33 kPa [m³/m³]\nSPAR: Soil parameterization choice:\nvan Genuchten (1980)\nSaxton-Rawls (1986)\nO: Current soil water content [m³/m³]\nDz: Distance from surface to half-layer [mm]\nWIS: Water incoming to soil layer [mm/h]\ncosalp: Cosine of slope angle [-]\nPond: Ponding depth [mm]\n\nReturns\n\nf: Actual infiltration rate [mm/h]\nfpot: Potential infiltration rate [mm/h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.leakage_bottom-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT, Int64, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.leakage_bottom","text":"leakage_bottom(\n    O::Vector{FT},\n    Ks_Zs::Vector{FT},\n    Osat::Vector{FT},\n    Ohy::Vector{FT},\n    L::Vector{FT},\n    nVG::Vector{FT},\n    Kbot::FT,\n    ms::Int,\n    SPAR::Int\n) where {FT<:AbstractFloat}\n\nCalculate bottom leakage for soil water movement.\n\nArguments\n\nO: Soil water content [m³/m³]\nKs_Zs: Saturated hydraulic conductivity [mm/h]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nL: Pore size distribution index [-]\nnVG: van Genuchten n parameter [-]\nKbot: Bottom boundary hydraulic conductivity [mm/h]\nms: Index of bottom soil layer [-]\nSPAR: Soil parameterization choice:\nvan Genuchten (1980)\nSaxton-Rawls (1986)\n\nReturns\n\nLk: Bottom boundary leakage flux [mm/h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.root_fraction_general-Union{Tuple{FT}, Tuple{Vector{FT}, Int64, Vararg{Vector{FT}, 6}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.root_fraction_general","text":"root_fraction_general(\n    Zs::Vector{FT},\n    CASE_ROOT::Int,\n    ZR95_H::Vector{FT},\n    ZR50_H::Vector{FT},\n    ZR95_L::Vector{FT},\n    ZR50_L::Vector{FT},\n    ZRmax_H::Vector{FT},\n    ZRmax_L::Vector{FT}\n) where {FT<:AbstractFloat}\n\nCompute root fraction distributions for high and low vegetation using different root profile models.\n\nArguments\n\nZs: Soil layer depths [mm]\nCASE_ROOT: Root profile type:\nExponential (Arora and Boer 2005)\nLinear Dose Response (Schenk and Jackson 2002)\nConstant Profile\nDeep (Tap) Root Profile\nZR95_H: 95th percentile root depth for high vegetation [mm]\nZR50_H: 50th percentile root depth for high vegetation [mm]\nZR95_L: 95th percentile root depth for low vegetation [mm]\nZR50_L: 50th percentile root depth for low vegetation [mm]\nZRmax_H: Maximum root depth for high vegetation [mm]\nZRmax_L: Maximum root depth for low vegetation [mm]\n\nReturns\n\nRfH_Zs: Root fraction distribution for high vegetation [dimensionless]\nRfL_Zs: Root fraction distribution for low vegetation [dimensionless]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.root_soil_conductance-Union{Tuple{FT}, NTuple{5, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.root_soil_conductance","text":"root_soil_conductance(\n    Ks::FT,\n    Rl::FT,\n    rcyl::FT,\n    rroot::FT,\n    Zr::FT\n) where {FT<:AbstractFloat}\n\nCalculate soil-to-root conductance using the Holtta/Sperry model.\n\nArguments\n\nKs: Saturated hydraulic conductivity [mm/h]\nRl: Root length index [m root/m² ground]\nrcyl: Radius of the cylinder of soil to which root has access [m]\nrroot: Root radius [m]\nZr: Rooting depth [m]\n\nReturns\n\nKsr: Soil-to-root conductance [mmol H₂O / m² ground s MPa]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_moisture_conductivity_update-Union{Tuple{FT}, Tuple{Vector{FT}, FT, FT, FT, FT, FT, Int64, FT, Int64, Int64, Vararg{Vector{FT}, 13}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_moisture_conductivity_update","text":"soil_moisture_conductivity_update(\n    V::Vector{FT},\n    Pcla::FT,\n    Psan::FT,\n    Porg::FT,\n    Kfc::FT,\n    Phy::FT,\n    SPAR::Int,\n    Kbot::FT,\n    CASE_ROOT_H::Int,\n    CASE_ROOT_L::Int,\n    ZR95_H::Vector{FT},\n    ZR95_L::Vector{FT},\n    ZR50_H::Vector{FT},\n    ZR50_L::Vector{FT},\n    ZRmax_H::Vector{FT},\n    ZRmax_L::Vector{FT},\n    Zs::Vector{FT},\n    Rrootl_H::Vector{FT},\n    Rrootl_L::Vector{FT},\n    PsiL50_H::Vector{FT},\n    PsiL50_L::Vector{FT},\n    PsiX50_H::Vector{FT},\n    PsiX50_L::Vector{FT}\n) where {FT<:AbstractFloat}\n\nUpdates soil moisture content and calculates hydraulic properties based on current conditions.\n\nArguments\n\nV: Soil water volume per unit area [mm]\nPcla: Clay fraction in soil [-]\nPsan: Sand fraction in soil [-]\nPorg: Organic matter fraction in soil [-]\nKfc: Hydraulic conductivity at field capacity [mm/h]\nPhy: Soil water potential at hygroscopic point [kPa]\nSPAR: Soil parameterization choice:\nVan-Genuchten (1980)\nSaxton-Rawls (1986)\nKbot: Hydraulic conductivity at bottom boundary [mm/h]\nCASE_ROOT_H: Root distribution type for high vegetation [-]\nCASE_ROOT_L: Root distribution type for low vegetation [-]\nZR95_H: 95th percentile root depth for high vegetation [mm]\nZR95_L: 95th percentile root depth for low vegetation [mm]\nZR50_H: 50th percentile root depth for high vegetation [mm]\nZR50_L: 50th percentile root depth for low vegetation [mm]\nZRmax_H: Maximum root depth for high vegetation [mm]\nZRmax_L: Maximum root depth for low vegetation [mm]\nZs: Soil layer depths [mm]\nRrootl_H: Root length density for high vegetation [mm/mm³]\nRrootl_L: Root length density for low vegetation [mm/mm³]\nPsiL50_H: Leaf water potential at 50% conductance loss for high vegetation [MPa]\nPsiL50_L: Leaf water potential at 50% conductance loss for low vegetation [MPa]\nPsiX50_H: Xylem water potential at 50% conductance loss for high vegetation [MPa]\nPsiX50_L: Xylem water potential at 50% conductance loss for low vegetation [MPa]\n\nReturns\n\nV: Updated soil water volume [mm]\nO: Volumetric soil moisture content [m³/m³]\nOS: Surface soil moisture [m³/m³]\nPsi_soil: Soil water potential [MPa]\nPsi_s_H: Soil water potential for high vegetation [MPa]\nPsi_s_L: Soil water potential for low vegetation [MPa]\nExwat_H: Water extraction rate for high vegetation [mm/h]\nExwat_L: Water extraction rate for low vegetation [mm/h]\nKo: Hydraulic conductivity [mm/h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_moistures_rich_comp-Union{Tuple{FT}, Tuple{Vector{FT}, FT, FT, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Int64, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Int64, Vector{FT}, Vector{FT}, FT, FT, Vector{FT}, Vector{FT}, FT, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_moistures_rich_comp","text":"soil_moistures_rich_comp(\n    V,\n    Lk,\n    f,\n    EG,\n    T_H,\n    T_L,\n    Qi_in,\n    IS,\n    SPAR,\n    Osat,\n    Ohy,\n    O33,\n    dz,\n    Ks_Zs,\n    Dz,\n    numn,\n    L,\n    Pe,\n    aR,\n    aT,\n    alpVG,\n    nVG,\n    cosalp,\n    sinalp,\n    SN)\n\nCalculate soil moisture changes using Richards equation-based hydrological model.\n\nArguments\n\nV::Vector{FT}: Current soil water volume per unit area [mm]\nLk::FT: Bottom leakage rate [mm/h]\nf::FT: Infiltration rate at top boundary [mm/h]\nEG::Vector{FT}: Evaporation rates from ground [mm/h]\nT_H::Vector{FT}: Transpiration rates from hydrophilic roots [mm/h]\nT_L::Vector{FT}: Transpiration rates from hydrophobic roots [mm/h]\nQi_in::Vector{FT}: Lateral inflow rates [mm/h]\nIS::Vector{FT}: Surface water indicator (1 for surface water present)\nSPAR::Int: Soil parameter set selector (1: Van Genuchten, 2: Brooks-Corey)\nOsat::Vector{FT}: Saturated water content at 0 kPa\nOhy::Vector{FT}: Residual (hygroscopic) water content\nO33::Vector{FT}: Water content at -33 kPa tension\ndz::Vector{FT}: Layer thicknesses [mm]\nKs_Zs::Vector{FT}: Saturated hydraulic conductivity [mm/h]\nDz::Vector{FT}: Distance between layer centers [mm]\nnumn::Int: Number of soil layers\nL::Vector{FT}: Lambda parameter (slope of log tension-moisture curve)\nPe::Vector{FT}: Air entry tension (bubbling pressure) [kPa]\naR::FT: Horizontal length scale parameter\naT::FT: Terrain curvature parameter\nalpVG::Vector{FT}: van Genuchten α parameter\nnVG::Vector{FT}: van Genuchten n parameter\ncosalp::FT: Cosine of slope angle\nsinalp::FT: Sine of slope angle\nSN::FT: Stream network identifier\n\nReturns\n\ndV::Vector{FT}: Change rates of soil water volume per unit area [mm/h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_moistures_rich_comp_lat2-Union{Tuple{FT}, Tuple{Vector{FT}, FT, Int64, Vararg{FT, 13}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_moistures_rich_comp_lat2","text":"soil_moistures_rich_comp_lat2(\n    Vlat::Vector{FT},\n    dz::FT,\n    SPAR::Int,\n    Ks::FT,\n    Osat::FT,\n    Ohy::FT,\n    L::FT,\n    Pe::FT,\n    O33::FT,\n    alpVG::FT,\n    nVG::FT,\n    C1::FT,\n    C2::FT,\n    f1::FT,\n    f2::FT,\n    Wcan::FT\n) where {FT<:AbstractFloat}\n\nCalculate lateral soil moisture redistribution between soil columns.\n\nArguments\n\nVlat: Vector of soil water volumes per unit area for both columns [mm]\ndz: Layer thickness [mm]\nSPAR: Soil parameterization choice (1: Van-Genuchten, 2: Saxton-Rawls)\nKs: Saturated hydraulic conductivity [mm/h]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nL: Lambda parameter (for Saxton-Rawls model) [-]\nPe: Air entry pressure [kPa]\nO33: Water content at -33 kPa [m³/m³]\nalpVG: Van Genuchten α parameter [1/mm]\nnVG: Van Genuchten n parameter [-]\nC1: Column 1 coefficient [-]\nC2: Column 2 coefficient [-]\nf1: Fraction for column 1 [-]\nf2: Fraction for column 2 [-]\nWcan: Canopy width [m]\n\nReturns\n\ndVlat: Change rates of soil water volume per unit area for both columns [mm/h]\n\nNotes\n\nIf f1 or f2 is zero, the corresponding flux is set to zero.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_moistures_rich_comp_lat3-Union{Tuple{FT}, Tuple{Vector{FT}, FT, Int64, Vararg{FT, 15}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_moistures_rich_comp_lat3","text":"soil_moistures_rich_comp_lat3(\n    Vlat::Vector{FT},\n    dz::FT,\n    SPAR::Int,\n    Ks::FT,\n    Osat::FT,\n    Ohy::FT,\n    L::FT,\n    Pe::FT,\n    O33::FT,\n    alpVG::FT,\n    nVG::FT,\n    Cimp::FT,\n    Cbare::FT,\n    Cveg::FT,\n    fimp::FT,\n    fbare::FT,\n    fveg::FT,\n    Wcan::FT\n) where {FT<:AbstractFloat}\n\nCalculate lateral soil moisture redistribution between three soil columns.\n\nArguments\n\nVlat: Soil water volume per unit area for each column [mm]\ndz: Soil layer thickness [mm]\nSPAR: Soil parameterization choice:\nvan Genuchten (1980)\nSaxton-Rawls (1986)\nKs: Saturated hydraulic conductivity [mm/h]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nL: Pore size distribution index [-]\nPe: Air entry pressure [kPa]\nO33: Water content at -33 kPa [m³/m³]\nalpVG: van Genuchten α parameter [1/mm]\nnVG: van Genuchten n parameter [-]\nCimp: Contact length of impervious column [mm]\nCbare: Contact length of bare soil column [mm]\nCveg: Contact length of vegetated column [mm]\nfimp: Fraction of impervious area [-]\nfbare: Fraction of bare soil area [-]\nfveg: Fraction of vegetated area [-]\nWcan: Canyon width [mm]\n\nReturns\n\ndVlat::Vector{FT}: Change rates of soil water volume [mm/h] for:\nImpervious column\nBare soil column\nVegetated column\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_parameters-Union{Tuple{FT}, Tuple{FT, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_parameters","text":"soil_parameters(\n    Psan::FT,\n    Pcla::FT,\n    Porg::FT\n) where {FT<:AbstractFloat}\n\nCalculate soil hydraulic and thermal parameters based on soil texture composition.\n\nArguments\n\nPsan: Sand fraction in soil [0-1]\nPcla: Clay fraction in soil [0-1]\nPorg: Organic matter fraction in soil [0-1]\n\nReturns\n\nOsat::FT: Saturated soil water content [-]\nL::FT: Slope of logarithmic tension-moisture curve [-]\nPe::FT: Air entry tension [kPa]\nKs::FT: Saturated hydraulic conductivity [mm/h]\nO33::FT: Soil water content at 33 kPa [-]\nrsd::FT: Soil bulk density [kg/m³]\nlan_dry::FT: Thermal conductivity of dry soil [W/m K]\nlan_s::FT: Thermal conductivity of solid soil components [W/m K]\ncv_s::FT: Volumetric heat capacity of solid soil components [J/m³ K]\nK_usle::FT: USLE K factor for soil erodibility [kgh/Jmm]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_parameters2-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vararg{FT, 4}}, Tuple{Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT, FT, FT, FT, Vector{FT}}, Tuple{Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT, FT, FT, FT, Vector{FT}, Int64}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_parameters2","text":"soil_parameters2(\n    Osat::Vector{FT},\n    L::Vector{FT},\n    Pe::Vector{FT},\n    Ks::Vector{FT},\n    O33::Vector{FT},\n    nVG::Vector{FT},\n    alpVG::Vector{FT},\n    Kfc::FT,\n    Pss::FT,\n    Pwp::FT,\n    Phy::FT,\n    Ohy::Vector{FT}=zeros(FT, length(Osat)),\n    SPAR::Int=2\n) where {FT<:AbstractFloat}\n\nCalculate soil moisture retention points based on soil hydraulic parameters.\n\nArguments\n\nOsat::Vector{FT}: Saturated soil water content [-]\nL::Vector{FT}: Pore size distribution index [-]\nPe::Vector{FT}: Air entry pressure [kPa]\nKs::Vector{FT}: Saturated hydraulic conductivity [mm/h]\nO33::Vector{FT}: Soil water content at -33 kPa [-]\nnVG::Vector{FT}: van Genuchten n parameter [-]\nalpVG::Vector{FT}: van Genuchten α parameter [1/mm]\nKfc::FT: Hydraulic conductivity at field capacity [mm/h]\nPss::FT: Soil water potential at steady state [kPa]\nPwp::FT: Permanent wilting point potential [kPa]\nPhy::FT: Hygroscopic point potential [kPa]\nOhy::Vector{FT}: Initial hygroscopic water content [-]\nSPAR::Int: Soil parameter set:\nvan Genuchten (1980)\nBrooks-Corey (default)\n\nReturns\n\nOfc::Vector{FT}: Soil water content at field capacity [-]\nOss::Vector{FT}: Soil water content at steady state [-]\nOwp::Vector{FT}: Soil water content at wilting point [-]\nOhy::Vector{FT}: Soil water content at hygroscopic point [-]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_parameters_total-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, Int64, FT, Int64, Int64, Vararg{Vector{FT}, 7}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_parameters_total","text":"soil_parameters_total(\n    Pcla::FT,\n    Psan::FT,\n    Porg::FT,\n    Kfc::FT,\n    Phy::FT,\n    SPAR::Int,\n    Kbot::FT,\n    CASE_ROOT_H::Int,\n    CASE_ROOT_L::Int,\n    ZR95_H::Vector{FT},\n    ZR95_L::Vector{FT},\n    ZR50_H::Vector{FT},\n    ZR50_L::Vector{FT},\n    ZRmax_H::Vector{FT},\n    ZRmax_L::Vector{FT},\n    Zs::Vector{FT}\n) where {FT<:AbstractFloat}\n\nCalculate total soil parameters based on composition and root distribution.\n\nArguments\n\nPcla: Clay fraction in soil [-]\nPsan: Sand fraction in soil [-]\nPorg: Organic matter fraction in soil [-]\nKfc: Hydraulic conductivity at field capacity [mm/h]\nPhy: Soil water potential at hygroscopic point [kPa]\nSPAR: Soil parameterization choice:\nvan Genuchten (1980)\nSaxton-Rawls (1986)\nKbot: Hydraulic conductivity at bottom boundary [mm/h]\nCASE_ROOT_H: Root distribution type for high vegetation [-]\nCASE_ROOT_L: Root distribution type for low vegetation [-]\nZR95_H: 95th percentile root depth for high vegetation [mm]\nZR95_L: 95th percentile root depth for low vegetation [mm]\nZR50_H: 50th percentile root depth for high vegetation [mm]\nZR50_L: 50th percentile root depth for low vegetation [mm]\nZRmax_H: Maximum root depth for high vegetation [mm]\nZRmax_L: Maximum root depth for low vegetation [mm]\nZs: Soil layer depths [mm]\n\nReturns\n\nZs: Soil layer depths [mm]\ndz: Layer thicknesses [mm]\nms: Number of soil layers [-]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nnVG: van Genuchten n parameter [-]\nalpVG: van Genuchten α parameter [1/mm]\nKs_Zs: Saturated hydraulic conductivity [mm/h]\nL: Pore size distribution index [-]\nPe: Air entry pressure [kPa]\nO33: Water content at -33 kPa [m³/m³]\nSPAR: Soil parameterization type [-]\nEvL_Zs: Evaporation layer fractions [-]\nInf_Zs: Infiltration layer fractions [-]\nRfH_Zs: Root fraction distribution for high vegetation [-]\nRfL_Zs: Root fraction distribution for low vegetation [-]\nZinf: Infiltration depth [mm]\nKbot: Bottom boundary conductivity [mm/h]\nSlo_pot: Slope fractions [-]\nDz: Layer center distances [mm]\naR: Horizontal length scale [-]\naTop: Area to contour length ratio [mm]\nrsd: Dry soil density [kg/m³]\nlan_dry: Dry soil thermal conductivity [W/m K]\nlan_s: Solid soil thermal conductivity [W/m K]\ncv_s: Solid soil volumetric heat capacity [J/m³ K]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_thermal_properties-Union{Tuple{FT}, NTuple{8, Vector{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_thermal_properties","text":"soil_thermal_properties(Tdp, rsd, lan_dry, lan_s, cv_s, Osat, Ohy, O) where {FT<:AbstractFloat}\n\nCompute soil thermal properties based on soil moisture and composition.\n\nArguments\n\nTdp::Vector{FT},: Dampening temperature [°C]\nrsd::Vector{FT}: Density dry soil [kg/m³]\nlan_dry::Vector{FT}: Thermal conductivity dry soil [W/m K]\nlan_s::Vector{FT}: Thermal conductivity soil solid [W/m K]\ncv_s::Vector{FT}: Volumetric heat capacity soil solid [J/m³ K]\nOsat::Vector{FT}: Water content at saturation [-]\nOhy::Vector{FT}: Residual/hygroscopic water content [-]\nO::Vector{FT}: Soil moisture at previous time step [-]\n\nReturns\n\nlanS::Vector{FT}: Thermal conductivity of soil [W/m K]\ncv_Soil::Vector{FT}: Volumetric heat capacity of soil [J/m³ K]\nCTt::Vector{FT}: Total thermal capacity of soil [K m²/J]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.soil_water_multilayer-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, Vector{FT}, Int64, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Int64, Vector{FT}, Vector{FT}, Matrix{FT}, Matrix{FT}, Vararg{Vector{FT}, 6}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.soil_water_multilayer","text":"soil_water_multilayer(\n    V::Vector{FT},\n    Zs::Vector{FT},\n    dz::Vector{FT},\n    n::Int,\n    Osat::Vector{FT},\n    Ohy::Vector{FT},\n    nVG::Vector{FT},\n    alpVG::Vector{FT},\n    Ks_Zs::Vector{FT},\n    L::Vector{FT},\n    Pe::Vector{FT},\n    O33::Vector{FT},\n    SPAR::Int,\n    EvL_Zs::Vector{FT},\n    Inf_Zs::Vector{FT},\n    RfH_Zs::Matrix{FT},\n    RfL_Zs::Matrix{FT},\n    Rrootl_H::Vector{FT},\n    Rrootl_L::Vector{FT},\n    PsiL50_H::Vector{FT},\n    PsiL50_L::Vector{FT},\n    PsiX50_H::Vector{FT},\n    PsiX50_L::Vector{FT}\n) where {FT<:AbstractFloat}\n\nCalculate soil water dynamics and potential water extraction rates.\n\nArguments\n\nV: Soil water volume per unit area [mm]\nZs: Soil layer depths [mm]\ndz: Layer thicknesses [mm]\nn: Number of soil layers [-]\nOsat: Saturated water content [m³/m³]\nOhy: Hygroscopic water content [m³/m³]\nnVG: van Genuchten n parameter [-]\nalpVG: van Genuchten α parameter [1/mm]\nKs_Zs: Saturated hydraulic conductivity [mm/h]\nL: Pore size distribution index [-]\nPe: Air entry pressure [kPa]\nO33: Water content at -33 kPa [m³/m³]\nSPAR: Soil parameterization choice:\nvan Genuchten (1980)\nSaxton-Rawls (1986)\nEvL_Zs: Evaporation layer fractions [-]\nInf_Zs: Infiltration layer fractions [-]\nRfH_Zs: Root fraction distribution for high vegetation [-]\nRfL_Zs: Root fraction distribution for low vegetation [-]\nRrootl_H: Root length density for high vegetation [mm/mm³]\nRrootl_L: Root length density for low vegetation [mm/mm³]\nPsiL50_H: Leaf water potential at 50% loss for high vegetation [MPa]\nPsiL50_L: Leaf water potential at 50% loss for low vegetation [MPa]\nPsiX50_H: Xylem water potential at 50% loss for high vegetation [MPa]\nPsiX50_L: Xylem water potential at 50% loss for low vegetation [MPa]\n\nReturns\n\nO: Volumetric soil moisture content [m³/m³]\nZWT: Water table depth [mm]\nOF: Infiltration water content [-]\nOS: Surface soil moisture [-]\nPsi_s_H: Soil water potential for high vegetation [MPa]\nPsi_s_L: Soil water potential for low vegetation [MPa]\ngsr_H: Root-soil conductance for high vegetation [mmol/m²/s/MPa]\ngsr_L: Root-soil conductance for low vegetation [mmol/m²/s/MPa]\nExwat_H: Water extraction rate for high vegetation [mm/h]\nExwat_L: Water extraction rate for low vegetation [mm/h]\nRd: Surface runoff [mm]\nWTR: Water table rise [mm]\nPOT: Soil water potential [mm]\nOH: Average soil moisture for high vegetation [-]\nOL: Average soil moisture for low vegetation [-]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Soil.volume_correction-Union{Tuple{FT}, Tuple{Vector{FT}, Vector{FT}, Matrix{FT}, Matrix{FT}, FT, Vector{FT}, Vector{FT}, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Soil.volume_correction","text":"volume_correction(V, EvL_Zs, RfH_Zs, RfL_Zs, EG, T_H, T_L, Lk)\n\nVolume correction for negative values.\n\nArguments\n\nV: Volume array\nEvL_Zs: Evaporation layers array\nRfH_Zs: Root fraction high vegetation layers array\nRfL_Zs: Root fraction low vegetation layers array\nEG: Ground evaporation\nT_H: High vegetation transpiration array\nT_L: Low vegetation transpiration array\nLk: Leakage value\n\nReturns\n\nV: Corrected volume array\nT_H: Updated high vegetation transpiration\nT_L: Updated low vegetation transpiration\nEG: Updated ground evaporation\nLk: Updated leakage\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Turbulent-Heat","page":"Reference","title":"Turbulent Heat","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.TurbulentHeat.calculate_t2m-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, Any, FT, FT, NamedTuple, FT, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.TurbulentHeat.calculate_t2m","text":"calculate_t2m(\n    Timp::FT,\n    Tbare::FT,\n    Tveg::FT,\n    Twsun::FT,\n    Twshade::FT,\n    Tcan::FT,\n    Zp1::FT,\n    rap_can2m::FT,\n    rap_can2m_Inv::FT,\n    rb_L::FT,\n    RES_w1::FT,\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    Gemeotry_m::::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    TempVec_ittm,\n    cp_atm::FT,\n    rho_atm::FT,\n    ParCalculation::NamedTuple,\n    fconv::FT,\n    MeteoData::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate the air temperature at 2m level and compute sensible heat fluxes.\n\nArguments\n\nTimp: impervious ground temperature [K]\nTbare: bare ground temperature [K]\nTveg: vegetated ground temperature [K]\nTwsun: sunlit wall temperature [K]\nTwshade: shaded wall temperature [K]\nTcan: canyon air temperature [K]\nZp1: reference height [m]\nrap_can2m: resistance between canyon and 2m height [s/m]\nrap_can2m_Inv: inverse resistance between canyon and 2m height [m/s]\nrb_L: leaf boundary layer resistance [s/m]\nRES_w1: wall resistance [s/m]\nFractionsGround: ground cover fractions\nGemeotry_m: urban geometry parameters\nParVegGround: vegetation parameters\nTempVec_ittm: temperature variables from previous timestep\ncp_atm: specific heat capacity of air [J/kg/K]\nrho_atm: air density [kg/m³]\nParCalculation: calculation parameters\nfconv: convection factor [-]\nMeteoData: meteorological data\n\nReturns\n\nT2m::FT: air temperature at 2m [K]\nDHi::FT: sensible heat flux difference [W/m²]\nHimp_2m::FT: impervious surface sensible heat flux at 2m [W/m²]\nHbare_2m::FT: bare soil sensible heat flux at 2m [W/m²]\nHveg_2m::FT: vegetated surface sensible heat flux at 2m [W/m²]\nHwsun_2m::FT: sunlit wall sensible heat flux at 2m [W/m²]\nHwshade_2m::FT: shaded wall sensible heat flux at 2m [W/m²]\nHcan_2m::FT: canyon sensible heat flux at 2m [W/m²]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.TurbulentHeat.heat_flux_canyon-Union{Tuple{FT}, Tuple{AbstractVector{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.TurbulentHeat.heat_flux_canyon","text":"heat_flux_canyon(\n    TemperatureC::AbstractVector{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    MeteoData::NamedTuple,\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    fconvPreCalc::FT,\n    fconv::FT\n) where {FT<:AbstractFloat}\n\nCalculate sensible and latent heat fluxes in the urban canyon.\n\nArguments\n\nTemperatureC: Temperature vector [K]\nGemeotry_m: Urban geometry parameters\nMeteoData: Meteorological data\nParVegTree: Tree vegetation parameters\nfconvPreCalc: Pre-calculated convection flag [-]\nfconv: Convection factor [-]\n\nReturns\n\nHcanyon::FT: Sensible heat flux in canyon [W/m²]\nLEcanyon::FT: Latent heat flux in canyon [W/m²]\nra_canyon::FT: Aerodynamic resistance in canyon [s/m]\nra_orig::FT: Original aerodynamic resistance [s/m]\nfconv::FT: Convection enhancement factor [-]\nHumidityCan::NamedTuple: Canyon humidity parameters\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.TurbulentHeat.heat_flux_ground-Union{Tuple{FT}, Tuple{AbstractVector{FT}, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, FT, FT, FT, Bool, NamedTuple, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.TurbulentHeat.heat_flux_ground","text":"heat_flux_ground(\n    TemperatureC::AbstractVector{FT},\n    TempVec_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParSoilGround::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    SoilPotW_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Int_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    ParInterceptionTree::NamedTuple,\n    ParCalculation::NamedTuple,\n    SWRdir_abs_tree::FT,\n    SWRdiff_abs_tree::FT,\n    SWRdir_abs_groundveg::FT,\n    SWRdiff_abs_groundveg::FT,\n    RESPreCalc::Bool,\n    rsGroundPreCalc::NamedTuple,\n    rsTreePreCalc::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate sensible and latent heat fluxes for ground surfaces.\n\nArguments\n\nTemperatureC: Temperature vector [K]\nTempVec_ittm: Temperature from previous timestep\nMeteoData: Meteorological data\nGemeotry_m: Urban geometry parameters\nFractionsGround: Ground surface fractions\nParVegGround: Ground vegetation parameters\nParVegTree: Tree vegetation parameters\nParSoilGround: Ground soil parameters\nSoilPotW_ittm: Soil water potential from previous timestep\nOwater_ittm: Soil water content from previous timestep\nVwater_ittm: Soil water volume from previous timestep\nExWater_ittm: Extractable water from previous timestep\nInt_ittm: Interception from previous timestep\nCiCO2Leaf_ittm: Leaf CO2 concentration from previous timestep\nParInterceptionTree: Tree interception parameters\nParCalculation: Calculation parameters\nSWRdir_abs_tree: Direct shortwave radiation absorbed by trees [W/m²]\nSWRdiff_abs_tree: Diffuse shortwave radiation absorbed by trees [W/m²]\nSWRdir_abs_groundveg: Direct shortwave radiation absorbed by ground vegetation [W/m²]\nSWRdiff_abs_groundveg: Diffuse shortwave radiation absorbed by ground vegetation [W/m²]\nRESPreCalc: Use pre-calculated resistances\nrsGroundPreCalc: Pre-calculated ground resistance parameters\nrsTreePreCalc: Pre-calculated tree resistance parameters\n\nReturns\n\nA NamedTuple containing:\n\nHimp::FT: Sensible heat flux from impervious ground [W/m²]\nHbare::FT: Sensible heat flux from bare ground [W/m²]\nHveg::FT: Sensible heat flux from vegetated ground [W/m²]\nHtree::FT: Sensible heat flux from trees [W/m²]\nEimp::FT: Water vapor flux from impervious ground [kg/m²s]\nEbare_pond::FT: Ponded water vapor flux from bare ground [kg/m²s]\nEbare_soil::FT: Soil water vapor flux from bare ground [kg/m²s]\nEveg_int::FT: Intercepted water vapor flux from vegetation [kg/m²s]\nEveg_pond::FT: Ponded water vapor flux from vegetated ground [kg/m²s]\nEveg_soil::FT: Soil water vapor flux from vegetated ground [kg/m²s]\nTEveg::FT: Transpiration flux from ground vegetation [kg/m²s]\nEtree_int::FT: Intercepted water vapor flux from trees [kg/m²s]\nTEtree::FT: Transpiration flux from trees [kg/m²s]\nAnd many more components including latent heat fluxes and resistances...\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.TurbulentHeat.heat_flux_roof-Union{Tuple{FT}, Tuple{AbstractVector{FT}, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, FT, Bool, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.TurbulentHeat.heat_flux_roof","text":"heat_flux_roof(\n    TemperatureR::AbstractVector{FT},\n    TempVec_ittm::NamedTuple,\n    MeteoData::NamedTuple,\n    HumidityAtm::NamedTuple,\n    ParVegRoof::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    FractionsRoof::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    ParSoilRoof::ModelComponents.Parameters.VegetatedSoilParameters{FT},\n    ParCalculation::NamedTuple,\n    SoilPotW_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    Vwater_ittm::NamedTuple,\n    ExWater_ittm::NamedTuple,\n    Int_ittm::NamedTuple,\n    CiCO2Leaf_ittm::NamedTuple,\n    SWRabs_dir::FT,\n    SWRabs_diff::FT,\n    RESPreCalc::Bool,\n    rsRoofPreCalc::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate sensible and latent heat fluxes for roof surfaces.\n\nArguments\n\nTemperatureR: Temperature vector [K]\nTempVec_ittm: Temperature variables from previous timestep\nMeteoData: Meteorological data\nHumidityAtm: Atmospheric humidity parameters\nParVegRoof: Roof vegetation parameters\nFractionsRoof: Roof surface fractions\nGemeotry_m: Urban geometry parameters\nParSoilRoof: Roof soil parameters\nParCalculation: Calculation parameters\nSoilPotW_ittm: Soil water potential from previous timestep\nOwater_ittm: Soil water content from previous timestep\nVwater_ittm: Soil water volume from previous timestep\nExWater_ittm: Extractable water from previous timestep\nInt_ittm: Interception from previous timestep\nCiCO2Leaf_ittm: Leaf CO2 concentration from previous timestep\nSWRabs_dir: Direct shortwave radiation [W/m²]\nSWRabs_diff: Diffuse shortwave radiation [W/m²]\nRESPreCalc: Use pre-calculated resistances\nrsRoofPreCalc: Pre-calculated resistance parameters\n\nReturns\n\nHroof_imp::FT: Sensible heat flux from impervious roof [W/m²]\nHroof_veg::FT: Sensible heat flux from vegetated roof [W/m²]\nEroof_imp::FT: Water vapor flux from impervious roof [kg/m²s]\nEroof_veg::FT: Water vapor flux from vegetated roof [kg/m²s]\nEroof_ground::FT: Ground water vapor flux from vegetated roof [kg/m²s]\nEroof_soil::FT: Soil water vapor flux from vegetated roof [kg/m²s]\nTEroof_veg::FT: Transpiration flux from vegetated roof [kg/m²s]\nLEroof_imp::FT: Latent heat flux from impervious roof [W/m²]\nLEroof_veg::FT: Latent heat flux from vegetated roof [W/m²]\nLEroof_ground::FT: Ground latent heat flux from vegetated roof [W/m²]\nLEroof_soil::FT: Soil latent heat flux from vegetated roof [W/m²]\nLTEroof_veg::FT: Latent heat of transpiration from vegetated roof [W/m²]\nCi_sun_roof::FT: Sunlit leaf internal CO2 concentration [μmol/mol]\nCi_shd_roof::FT: Shaded leaf internal CO2 concentration [μmol/mol]\nra::FT: Atmospheric resistance [s/m]\nrb::FT: Boundary layer resistance [s/m]\nrap_L::FT: Roof aerodynamic resistance [s/m]\nr_soil::FT: Soil resistance [s/m]\nrs_sun::FT: Sunlit stomatal resistance [s/m]\nrs_shd::FT: Shaded stomatal resistance [s/m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.TurbulentHeat.heat_flux_wall-Union{Tuple{FT}, Tuple{AbstractVector{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.TurbulentHeat.heat_flux_wall","text":"heat_flux_wall(\n    TemperatureC::AbstractVector{FT},\n    Gemeotry_m::ModelComponents.Parameters.UrbanGeometryParameters{FT},\n    MeteoData::NamedTuple,\n    ParVegTree::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    ParVegGround::ModelComponents.Parameters.HeightDependentVegetationParameters{FT},\n    FractionsGround::ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}\n) where {FT<:AbstractFloat}\n\nCalculate sensible and latent heat fluxes for sunlit and shaded walls.\n\nArguments\n\nTemperatureC: Temperature vector [K]\nGemeotry_m: Urban geometry parameters\nMeteoData: Meteorological data\nParVegTree: Tree vegetation parameters\nParVegGround: Ground vegetation parameters\nFractionsGround: Ground cover fractions\n\nReturns\n\nHwsun::FT: Sensible heat flux from sunlit wall [W/m²]\nHwshade::FT: Sensible heat flux from shaded wall [W/m²]\nEwsun::FT: Latent heat flux from sunlit wall [kg/m²s]\nEwshade::FT: Latent heat flux from shaded wall [kg/m²s]\nLEwsun::FT: Latent heat from sunlit wall [W/m²]\nLEwshade::FT: Latent heat from shaded wall [W/m²]\nRES_w1::FT: Wall resistance at level 1 [s/m]\nRES_w2::FT: Wall resistance at level 2 [s/m]\nrap_Zp1_In::FT: In-canyon aerodynamic resistance at level 1 [s/m]\nrap_Zp2_In::FT: In-canyon aerodynamic resistance at level 2 [s/m]\nHwsun1::FT: Sensible heat flux from sunlit wall at level 1 [W/m²]\nHwshade1::FT: Sensible heat flux from shaded wall at level 1 [W/m²]\nHwsun2::FT: Sensible heat flux from sunlit wall at level 2 [W/m²]\nHwshade2::FT: Sensible heat flux from shaded wall at level 2 [W/m²]\ncp_atm::FT: Specific heat capacity of air [J/kg/K]\nrho_atm::FT: Air density [kg/m³]\nL_heat::FT: Latent heat of vaporization [J/kg]\nZp1::FT: Height of level 1 [m]\nZp2::FT: Height of level 2 [m]\nrap_Zp1::FT: Aerodynamic resistance at level 1 [s/m]\nrap_Zp2::FT: Aerodynamic resistance at level 2 [s/m]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Water","page":"Reference","title":"Water","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.Water.water_canyon-Union{Tuple{FT}, Tuple{NamedTuple, NamedTuple, NamedTuple, NamedTuple, NamedTuple, FT, FT, FT, FT, FT, FT, FT, FT, FT, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions{FT}, UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters{FT}, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_canyon","text":"water_canyon(\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    Runon_ittm::NamedTuple,\n    Qinlat_ittm::NamedTuple,\n    Etree_In::FT,\n    Egveg_In::FT,\n    Egimp_Pond::FT,\n    Egbare_Pond::FT,\n    Egveg_Pond::FT,\n    Egbare_soil::FT,\n    Egveg_soil::FT,\n    TEgveg::FT,\n    TEtree::FT,\n    ParSoilGround::NamedTuple,\n    ParInterceptionTree::NamedTuple,\n    ParCalculation::NamedTuple,\n    ParVegGround::NamedTuple,\n    ParVegTree::NamedTuple,\n    FractionsGround::NamedTuple,\n    Gemeotry_m::NamedTuple,\n    Anthropogenic::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate water balance for canyon surfaces including trees, vegetation, and impervious areas.\n\nArguments\n\nMeteoData: Meteorological data\nInt_ittm: Previous timestep interception values\nOwater_ittm: Previous timestep soil moisture values\nRunon_ittm: Previous timestep runon values\nQinlat_ittm: Previous timestep lateral flow values\nEtree_In: Tree evaporation [kg/m²s]\nEgveg_In: Ground vegetation evaporation [kg/m²s]\nEgimp_Pond: Impervious ground evaporation [kg/m²s]\nEgbare_Pond: Bare ground evaporation [kg/m²s]\nEgveg_Pond: Vegetated ground evaporation [kg/m²s]\nEgbare_soil: Bare soil evaporation [kg/m²s]\nEgveg_soil: Vegetated soil evaporation [kg/m²s]\nTEgveg: Ground vegetation transpiration [kg/m²s]\nTEtree: Tree transpiration [kg/m²s]\nParSoilGround: Soil parameters for ground\nParInterceptionTree: Tree interception parameters\nParCalculation: Calculation parameters\nParVegGround: Ground vegetation parameters\nParVegTree: Tree vegetation parameters\nFractionsGround: Ground surface fractions\nGemeotry_m: Geometry parameters\nAnthropogenic: Anthropogenic water inputs\n\nReturns\n\nq_tree_dwn: Tree throughfall [mm/dth]\nIn_tree: Tree interception [mm]\ndIn_tree_dt: Change in tree interception [mm/dth]\nq_gveg_dwn: Ground vegetation throughfall [mm/dth]\nIn_gveg: Ground vegetation interception [mm]\ndIn_gveg_dt: Change in ground vegetation interception [mm/dth]\nq_gimp_runoff: Impervious ground runoff [mm/dth]\nIn_gimp: Impervious ground interception [mm]\ndIn_gimp_dt: Change in impervious ground interception [mm/dth]\nf_inf_gimp: Impervious ground infiltration [mm/h]\nq_gbare_runoff: Bare ground runoff [mm/dth]\nIn_gbare: Bare ground interception [mm]\ndIn_gbare_dt: Change in bare ground interception [mm/dth]\nf_inf_gbare: Bare ground infiltration [mm/h]\nq_gveg_runoff: Vegetated ground runoff [mm/dth]\nIn_gveg_pond: Ground vegetation ponding [mm]\ndIn_gveg_pond_dt: Change in ground vegetation ponding [mm/dth]\nf_inf_gveg: Vegetated ground infiltration [mm/h]\nV_gimp: Impervious ground water volume [mm]\nO_gimp: Impervious ground water content [-]\nOS_gimp: Impervious ground surface water content [-]\nLk_gimp: Impervious ground leakage [mm/h]\nPsi_s_H_gimp: Impervious ground high soil water potential [MPa]\nPsi_s_L_gimp: Impervious ground low soil water potential [MPa]\nExwat_H_gimp: Impervious ground high extractable water [mm]\nExwat_L_gimp: Impervious ground low extractable water [mm]\nRd_gimp: Impervious ground surface runoff [mm]\nTEgveg_imp: Ground vegetation transpiration from impervious [kg/m²s]\nTEtree_imp: Tree transpiration from impervious [kg/m²s]\nEgimp_soil: Impervious soil evaporation [kg/m²s]\ndV_dt_gimp: Change in impervious ground water volume [mm/dth]\nPsi_soil_gimp: Impervious ground soil water potential [MPa]\nKf_gimp: Impervious ground hydraulic conductivity [mm/h]\nV_gbare: Bare ground water volume [mm]\nO_gbare: Bare ground water content [-]\nOS_gbare: Bare ground surface water content [-]\nLk_gbare: Bare ground leakage [mm]\nPsi_s_H_gbare: Bare ground high soil water potential [MPa]\nPsi_s_L_gbare: Bare ground low soil water potential [MPa]\nExwat_H_gbare: Bare ground high extractable water [mm]\nExwat_L_gbare: Bare ground low extractable water [mm]\nRd_gbare: Bare ground surface runoff [mm]\nTEgveg_bare: Ground vegetation transpiration from bare [kg/m²s]\nTEtree_bare: Tree transpiration from bare [kg/m²s]\nEgbare_Soil: Bare soil evaporation [kg/m²s]\ndV_dt_gbare: Change in bare ground water volume [mm/dth]\nPsi_soil_gbare: Bare ground soil water potential [MPa]\nKf_gbare: Bare ground hydraulic conductivity [mm/h]\nV_gveg: Vegetated ground water volume [mm]\nO_gveg: Vegetated ground water content [-]\nOS_gveg: Vegetated ground surface water content [-]\nLk_gveg: Vegetated ground leakage [mm]\nPsi_s_H_gveg: Vegetated ground high soil water potential [MPa]\nPsi_s_L_gveg: Vegetated ground low soil water potential [MPa]\nExwat_H_gveg: Vegetated ground high extractable water [mm]\nExwat_L_gveg: Vegetated ground low extractable water [mm]\nRd_gveg: Vegetated ground surface runoff [mm]\nTEgveg_veg: Ground vegetation transpiration from vegetated [kg/m²s]\nTEtree_veg: Tree transpiration from vegetated [kg/m²s]\nEgveg_Soil: Vegetated soil evaporation [kg/m²s]\ndV_dt_gveg: Change in vegetated ground water volume [mm/dth]\nPsi_soil_gveg: Vegetated ground soil water potential [MPa]\nKf_gveg: Vegetated ground hydraulic conductivity [mm/h]\nQin_imp: Lateral flow to impervious ground [mm/dth]\nQin_bare: Lateral flow to bare ground [mm/dth]\nQin_veg: Lateral flow to vegetated ground [mm/dth]\nQin_bare2imp: Lateral flow from bare to impervious [mm/dth]\nQin_bare2veg: Lateral flow from bare to vegetated [mm/dth]\nQin_imp2bare: Lateral flow from impervious to bare [mm/dth]\nQin_imp2veg: Lateral flow from impervious to vegetated [mm/dth]\nQin_veg2imp: Lateral flow from vegetated to impervious [mm/dth]\nQin_veg2bare: Lateral flow from vegetated to bare [mm/dth]\nV: Total water volume [mm]\nO: Total water content [-]\nOS: Surface water content [-]\nLk: Total leakage [mm/h]\nRd: Surface runoff [mm]\ndV_dt: Change in total water volume [mm/dth]\nPsi_s_L: Low soil water potential [MPa]\nExwat_L: Low extractable water [mm]\nTEgveg_tot: Total ground vegetation transpiration [kg/m²s]\nPsi_s_H_tot: Total high soil water potential [MPa]\nExwat_H: Total extractable water [mm]\nTEtree_tot: Total tree transpiration [kg/m²s]\nEB_TEtree: Tree transpiration energy balance [W/m²]\nEB_TEgveg: Ground vegetation transpiration energy balance [W/m²]\nWBIndv: Individual water balance components\nWBTot: Total water balance components\nRunoff: Total runoff [mm/dth]\nRunon: Total runon [mm/dth]\nEtot: Total evapotranspiration [mm/dth]\nDeepGLk: Deep ground leakage [mm/dth]\nStorageTot: Total water storage change [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Water.water_ground-Union{Tuple{FT}, Tuple{FT, FT, FT, Vector{FT}, FT, FT, FT, FT, FT, FT, FT, Int64, FT, Int64, Int64, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_ground","text":"water_ground(\n    q_runon_veg::FT,\n    Runon_tm1::FT,\n    E_ground::FT,\n    Otm1::Vector{FT},\n    In_ground_tm1::FT,\n    In_max_ground::FT,\n    Pcla::FT,\n    Psan::FT,\n    Porg::FT,\n    Kfc::FT,\n    Phy::FT,\n    SPAR::Int,\n    Kbot::FT,\n    CASE_ROOT_H::Int,\n    CASE_ROOT_L::Int,\n    ZR95_H::Vector{FT},\n    ZR95_L::Vector{FT},\n    ZR50_H::Vector{FT},\n    ZR50_L::Vector{FT},\n    ZRmax_H::Vector{FT},\n    ZRmax_L::Vector{FT},\n    Zs::Vector{FT},\n    dth::FT,\n    row::FT\n) where {FT<:AbstractFloat}\n\nCalculate ground water dynamics and potential infiltration rates.\n\nArguments\n\nq_runon_veg: Runon from vegetation [mm/dth]\nRunon_tm1: Previous timestep runon [mm/dth]\nE_ground: Ground evaporation [kg/m²s]\nOtm1: Previous timestep soil moisture [m³/m³]\nIn_ground_tm1: Previous timestep ground interception [mm]\nIn_max_ground: Maximum ground interception capacity [mm]\nPcla: Clay fraction in soil [-]\nPsan: Sand fraction in soil [-]\nPorg: Organic matter fraction in soil [-]\nKfc: Hydraulic conductivity at field capacity [mm/h]\nPhy: Soil water potential at hygroscopic point [kPa]\nSPAR: Soil parameterization choice [-]\nKbot: Hydraulic conductivity at bottom boundary [mm/h]\nCASE_ROOT_H: Root distribution type for high vegetation [-]\nCASE_ROOT_L: Root distribution type for low vegetation [-]\nZR95_H: 95th percentile root depth for high vegetation [mm]\nZR95_L: 95th percentile root depth for low vegetation [mm]\nZR50_H: 50th percentile root depth for high vegetation [mm]\nZR50_L: 50th percentile root depth for low vegetation [mm]\nZRmax_H: Maximum root depth for high vegetation [mm]\nZRmax_L: Maximum root depth for low vegetation [mm]\nZs: Soil layer depths [mm]\ndth: Calculation time step [h]\nrow: Water density [kg/m³]\n\nReturns\n\nq_runon_ground: Ground runoff [mm/dth]\nIn_ground: Ground interception [mm]\ndIn_ground_dt: Change in ground interception [mm/dth]\nf_ground: Infiltration rate [mm/h]\nWBalance_In_ground: Water balance check [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Water.water_impervious-Union{Tuple{FT}, NTuple{8, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_impervious","text":"water_impervious(\n    Rain::FT,\n    Runon_tm1::FT,\n    E_imp::FT,\n    In_imp_tm1::FT,\n    dth::FT,\n    row::FT,\n    In_max_imp::FT,\n    K_imp::FT\n) where {FT<:AbstractFloat}\n\nCalculates water balance for impervious surfaces.\n\nArguments\n\nRain: precipitation [mm/dth]\nRunon_tm1: Previous timestep runon [mm/dth]\nE_imp: evaporation from impervious surfaces [kg/m²s]\nIn_imp_tm1: Interception from previous time step [mm]\ndth: calculation time step [h]\nrow: density of water [kg/m³]\nIn_max_imp: Maximum interception capacity of urban area [mm]\nK_imp: Hydraulic conductivity of impervious area [mm/h]\n\nReturns\n\nq_runon_imp: Runoff [mm/dth]\nIn_imp: Interception [mm]\ndIn_imp_dt: Change in interception [mm/dth]\nLk_imp: Leakage from impervious area [mm/h]\nWBalance_In_imp: Water balance check [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Water.water_roof-Union{Tuple{FT}, Tuple{FT, FT, FT, FT, FT, NamedTuple, NamedTuple, NamedTuple, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificSurfaceFractions, UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters{FT}, NamedTuple, UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters{FT}, NamedTuple}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_roof","text":"water_roof(\n    Eroof_imp::FT,\n    Eroof_veg::FT,\n    Eroof_ground::FT,\n    Eroof_soil::FT,\n    TEroof_veg::FT,\n    MeteoData::NamedTuple,\n    Int_ittm::NamedTuple,\n    Owater_ittm::NamedTuple,\n    Runon_ittm::NamedTuple,\n    FractionsRoof::NamedTuple,\n    ParSoilRoof::NamedTuple,\n    ParCalculation::NamedTuple,\n    ParVegRoof::NamedTuple,\n    Anthropogenic::NamedTuple\n) where {FT<:AbstractFloat}\n\nCalculate water balance for roof surfaces including vegetation, impervious areas, and soil.\n\nArguments\n\nEroof_imp: Evaporation from impervious surfaces [kg/m²s]\nEroof_veg: Evaporation from vegetation [kg/m²s]\nEroof_ground: Evaporation from ground under vegetation [kg/m²s]\nEroof_soil: Evaporation from soil [kg/m²s]\nTEroof_veg: Transpiration from vegetation [kg/m²s]\nMeteoData: Meteorological data\nInt_ittm: Previous timestep interception values\nOwater_ittm: Previous timestep soil moisture values\nRunon_ittm: Previous timestep runon values\nFractionsRoof: Roof surface fractions\nParSoilRoof: Soil parameters for roof\nParCalculation: Calculation parameters\nParVegRoof: Vegetation parameters for roof\nAnthropogenic: Anthropogenic water inputs\n\nReturns\n\nq_runon_imp: Runoff from impervious surfaces [mm/dth]\nIn_imp: Interception on impervious surfaces [mm]\ndIn_imp_dt: Change in impervious surface interception [mm/dth]\nLk_imp: Leakage from impervious surfaces [mm/h]\nq_runon_veg: Runoff from vegetation [mm/dth]\nIn_veg: Vegetation interception [mm]\ndIn_veg_dt: Change in vegetation interception [mm/dth]\nq_runon_ground: Ground runoff [mm/dth]\nIn_ground: Ground interception [mm]\ndIn_ground_dt: Change in ground interception [mm/dth]\ndV_dt: Change in soil water volume [mm/dth]\nf_ground: Ground infiltration rate [mm/h]\nV: Soil water volume [mm]\nO: Soil moisture [-]\nOS: Surface soil moisture [-]\nLk: Soil leakage [mm/h]\nPsi_s: Soil water potential [MPa]\nExwat: Extractable water [mm/h]\nRd: Surface runoff [mm/dth]\nTEroof_veg: Updated vegetation transpiration [kg/m²s]\nEroof_soil: Updated soil evaporation [kg/m²s]\nRunoff: Total roof runoff [mm/dth]\nRunon: Total roof runon [mm/dth]\nWBalance_In_imp: Water balance for impervious surfaces [mm/dth]\nWBalance_In_veg: Water balance for vegetation [mm/dth]\nWBalance_In_ground: Water balance for ground [mm/dth]\nWBalance_soil: Water balance for soil [mm/dth]\nWBalance_imp_tot: Total water balance for impervious surfaces [mm/dth]\nWBalance_veg_tot: Total water balance for vegetation [mm/dth]\nWBalance_tot: Total water balance [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Water.water_soil-Union{Tuple{FT}, Tuple{Vector{FT}, FT, FT, FT, FT, Vector{FT}, FT, FT, FT, FT, FT, FT, Int64, FT, Int64, Int64, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, Vector{FT}, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_soil","text":"water_soil(\n    Otm1::Vector{FT},\n    f::FT,\n    TE_H::Vector{FT},\n    TE_L::Vector{FT},\n    E_soil::FT,\n    Qlat_in::Vector{FT},\n    dth::FT,\n    Pcla::FT,\n    Psan::FT,\n    Porg::FT,\n    Kfc::FT,\n    Phy::FT,\n    SPAR::Int,\n    Kbot::FT,\n    CASE_ROOT_H::Int,\n    CASE_ROOT_L::Int,\n    ZR95_H::Vector{FT},\n    ZR95_L::Vector{FT},\n    ZR50_H::Vector{FT},\n    ZR50_L::Vector{FT},\n    ZRmax_H::Vector{FT},\n    ZRmax_L::Vector{FT},\n    Rrootl_H::Vector{FT},\n    Rrootl_L::Vector{FT},\n    PsiL50_H::Vector{FT},\n    PsiL50_L::Vector{FT},\n    PsiX50_H::Vector{FT},\n    PsiX50_L::Vector{FT},\n    Zs::Vector{FT},\n    row::FT\n) where {FT<:AbstractFloat}\n\nCalculate soil water dynamics and hydrological fluxes.\n\nArguments\n\nOtm1: Previous timestep soil moisture [-]\nf: Infiltration rate [mm/h]\nTE_H: High vegetation transpiration [kg/m²s]\nTE_L: Low vegetation transpiration [kg/m²s]\nE_soil: Soil evaporation [kg/m²s]\nQlat_in: Lateral water flux [mm/dth]\ndth: Time step [h]\nPcla: Clay fraction [-]\nPsan: Sand fraction [-]\nPorg: Organic matter fraction [-]\nKfc: Hydraulic conductivity at field capacity [mm/h]\nPhy: Soil water potential at hygroscopic point [kPa]\nSPAR: Soil parameterization choice [-]\nKbot: Bottom boundary conductivity [mm/h]\nCASE_ROOT_H: High vegetation root distribution type [-]\nCASE_ROOT_L: Low vegetation root distribution type [-]\nZR95_H: 95th percentile root depth for high vegetation [mm]\nZR95_L: 95th percentile root depth for low vegetation [mm]\nZR50_H: 50th percentile root depth for high vegetation [mm]\nZR50_L: 50th percentile root depth for low vegetation [mm]\nZRmax_H: Maximum root depth for high vegetation [mm]\nZRmax_L: Maximum root depth for low vegetation [mm]\nRrootl_H: Root length density for high vegetation [mm/mm³]\nRrootl_L: Root length density for low vegetation [mm/mm³]\nPsiL50_H: Leaf water potential at 50% loss for high vegetation [MPa]\nPsiL50_L: Leaf water potential at 50% loss for low vegetation [MPa]\nPsiX50_H: Xylem water potential at 50% loss for high vegetation [MPa]\nPsiX50_L: Xylem water potential at 50% loss for low vegetation [MPa]\nZs: Soil layer depths [mm]\nrow: Water density [kg/m³]\n\nReturns\n\nV: Water volume in each soil layer [mm]\nO: Soil moisture in each soil layer [-]\nOS: Surface soil moisture [-]\nLk: Leakage at bedrock [mm/h]\nPsi_s_H: Soil water potential for high vegetation [MPa]\nPsi_s_L: Soil water potential for low vegetation [MPa]\nExwat_H: Maximum extractable water for high vegetation [mm]\nExwat_L: Maximum extractable water for low vegetation [mm]\nRd: Saturation excess runoff [mm/dth]\nTE_L: Updated low vegetation transpiration [kg/m²s]\nTE_H: Updated high vegetation transpiration [kg/m²s]\nE_soil: Updated soil evaporation [kg/m²s]\ndV_dt: Change in water volume [mm/dth]\nWBalance_soil: Water balance check [mm/dth]\nPsi_soil: Soil water potential profile [mm]\nKo: Hydraulic conductivity profile [mm/h]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#UrbanTethysChloris.Water.water_vegetation-Union{Tuple{FT}, NTuple{8, FT}} where FT<:AbstractFloat","page":"Reference","title":"UrbanTethysChloris.Water.water_vegetation","text":"water_vegetation(\n    Rain::FT,\n    E_veg::FT,\n    In_veg_tm1::FT,\n    Sp_In::FT,\n    LAI::FT,\n    SAI::FT,\n    row::FT,\n    dth::FT\n) where {FT<:AbstractFloat}\n\nCalculate canopy rain interception and water balance for vegetation.\n\nArguments\n\nRain: precipitation [mm/dth]\nE_veg: evaporation from vegetation [kg/m²s]\nIn_veg_tm1: Interception from previous time step [mm]\nSp_In: Specific water interception capacity [mm]\nLAI: Leaf area index [-]\nSAI: Stem area index [-]\nrow: density of water [kg/m³]\ndth: calculation time step [h]\n\nReturns\n\nq_runon_veg: Runoff [mm/dth]\nIn_veg: Interception [mm]\ndIn_veg_dt: Change in interception [mm/dth]\nWBalance_In_veg: Water balance check [mm/dth]\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#Model-Components","page":"Reference","title":"Model Components","text":"","category":"section"},{"location":"95-reference/#Forcing-Inputs","page":"Reference","title":"Forcing Inputs","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.ForcingInputs.AnthropogenicInputs","page":"Reference","title":"UrbanTethysChloris.ModelComponents.ForcingInputs.AnthropogenicInputs","text":"AnthropogenicInputs{FT<:AbstractFloat}\n\nBuilding and anthropogenic inputs affecting the urban environment.\n\nFields\n\nTb::Vector{FT}: Interior building temperature [K]\nQf_canyon::Vector{FT}: Anthropogenic heat input into the canyon air [W/m²]\nQf_roof::Vector{FT}: Anthropogenic heat input above the roof [W/m²]\nWaterf_canyonVeg::Vector{FT}: Water applied on vegetated ground surface area [mm/time step]\nWaterf_canyonBare::Vector{FT}: Water applied on bare ground surface area [mm/time step]\nWaterf_roof::Vector{FT}: Water applied on roof surface area [mm/time step]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.ForcingInputs.ForcingInputSet","page":"Reference","title":"UrbanTethysChloris.ModelComponents.ForcingInputs.ForcingInputSet","text":"ForcingInputSet{FT<:AbstractFloat} <: AbstractForcingInputSet{FT}\n\nForcing inputs for the Urban Tethys-Chloris model.\n\nFields\n\ndatetime::Vector{DateTime}: Date and time of the forcing inputs.\nanthropogenic::AnthropogenicInputs{FT}: Anthropogenic inputs.\nhvacschedule::HVACSchedule{FT}: HVAC schedule.\nmeteorological::MeteorologicalInputs{FT}: Meteorological inputs.\nsunposition::SunPositionInputs{FT}: Sun position inputs.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.ForcingInputs.HVACSchedule","page":"Reference","title":"UrbanTethysChloris.ModelComponents.ForcingInputs.HVACSchedule","text":"HVACSchedule{FT<:AbstractFloat}\n\nHVAC schedule parameters that specify heat and humidity sources from building equipment and occupants.\n\nFields\n\nHequip: Sensible heat from equipment [W/m² building ground area]\nHpeople: Sensible heat from people [W/m² building ground area]\nLEequip: Latent heat from equipment [W/m² building ground area]\nLEpeople: Latent heat from people [W/m² building ground area]\nAirConRoomFraction: Fraction of air conditioned space [-]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.ForcingInputs.MeteorologicalInputs","page":"Reference","title":"UrbanTethysChloris.ModelComponents.ForcingInputs.MeteorologicalInputs","text":"MeteorologicalInputs{FT<:AbstractFloat}\n\nMeteorological inputs and derived atmospheric properties.\n\nFields\n\nLWR_in::Vector{FT}: Atmospheric longwave radiation [W/m² horizontal surface]\nSAB1_in::Vector{FT}: Component of direct incoming shortwave radiation [W/m² horizontal surface]\nSAB2_in::Vector{FT}: Component of direct incoming shortwave radiation [W/m² horizontal surface]\nSAD1_in::Vector{FT}: Component of diffuse incoming shortwave radiation [W/m² horizontal surface]\nSAD2_in::Vector{FT}: Component of diffuse incoming shortwave radiation [W/m² horizontal surface]\nTatm::Vector{FT}: Air Temperature at atmospheric reference level [K]\nUatm::Vector{FT}: Wind speed at atmospheric reference level [m/s]\nPre::Vector{FT}: Air pressure [Pa]\nRain::Vector{FT}: Precipitation [mm]\nrel_hum::Vector{FT}: Relative humidity [-]\ndatetime::Vector{DateTime}: Timestamps for the data\nesat_Tatm::Vector{FT}: Vapor pressure saturation at Tatm [Pa]\nea::Vector{FT}: Vapor pressure [Pa]\nq_atm::Vector{FT}: Specific humidity of air at reference height [-]\nqSat_atm::Vector{FT}: Saturation specific humidity [-]\nSW_dir::Vector{FT}: Direct incoming shortwave radiation [W/m² horizontal surface]\nSW_diff::Vector{FT}: Diffuse incoming shortwave radiation [W/m² horizontal surface]\nZatm::FT: Atmospheric reference height [m]\nCatm_CO2::FT: Atmospheric CO2 concentration [ppm]\nCatm_O2::FT: Intercellular Partial Pressure Oxygen [ppm]\nSunDSM_MRT::FT: Mean radiant temperature from sun [K]\ncp_atm::Vector{FT}: Specific heat of air [J/kg K]\nrho_atm::Vector{FT}: Dry air density at atmosphere [kg/m³]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.ForcingInputs.SunPositionInputs","page":"Reference","title":"UrbanTethysChloris.ModelComponents.ForcingInputs.SunPositionInputs","text":"SunPositionInputs{FT<:AbstractFloat}\n\nSolar position and timing parameters.\n\nFields\n\nt_bef::FT: Time before solar noon [h]\nt_aft::FT: Time after solar noon [h]\ntheta_Z::Vector{FT}: Solar zenith angle [rad]\ntheta_n::Vector{FT}: Difference between solar azimuth angle and canyon orientation [rad]\nzeta_S::Vector{FT}: Solar azimuth angle [rad]\nTimeOfMaxSolAlt::Vector{FT}: Time of maximum solar altitude [h]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#Parameters","page":"Reference","title":"Parameters","text":"","category":"section"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.HeightDependentVegetationParameters","text":"HeightDependentVegetationParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for the location-specific (tree, roof, ground) vegetation.\n\nFields\n\nLAI::FT: Leaf area index [-]\nSAI::FT: Stem area index [-].\nhc::FT: Canopy height [m].\nh_disp::FT:  [-].\nd_leaf::FT:  [-].\nCASE_ROOT::Int: Type of root profile [-].\nZR95::FT: Root depth, 95th percentile [mm].\nZR50::FT: Root depth, 50th percentile [mm].\nZRmax::FT: Root depth, maximum [mm]\nRrootl::FT: Root length index [m root m-2 PFT].\nPsiL50::FT: Water potential at 50 % of leaf hydraulic conductivity [MPa].\nPsiX50::FT: Water potential at 50 % of xylem hydraulic conductivity and limit for water extraction from soil [MPa].\nFI::FT: Intrinsec quantum efficency [µmol CO2 µmol-1 photons].\nDo::FT: Empirical coefficient that expresses the value of vapor pressure deficit at which f(∆e) = 0.5 [Pa].\na1::FT: Empirical parameter linking net assimilaton AnCto stomatal conductanceg{s,CO2}` [-].\ngo::FT: Minimum/cuticular stomatal conductance [mol CO2 m-2 leaf s-1].\nCT::Int: Photosyntesis Typology for Plants, Photosynthetic pathway C3 or C4 [-]\nDSE::FT: Activation Energy - Plant Dependent, Activation Energy in Photosynthesis for Rubisco Capacity [kJ/mol].\nHa::FT: Entropy factor - Plant Dependent, Activation energy [kJ / mol K].\ngmes::FT: Mesophyll conductance, not used [mol CO2/s m2].\nrjv::FT: Scaling factor between Jmax and V_{c,max} [µmol equivalent µmol-1 CO2].\nKopt::FT: Optical depth of direct beam per unit plant area (?) [-].\nKnit::FT: Canopy nitrogen decay coefficient [-].\nVmax::FT: Maximum Rubisco capacity at 25◦C leaf scale [µmol CO2 m-2 s-1]\nmSl::FT:  [-].\ne_rel::FT: Relative Efficiency of the photosynthesis apparatus due to Age/Day-length [-].\ne_relN::FT: Relative efficiency of the photosynthesis apparatus due to N limitations [-].\nPsi_sto_00::FT: Soil water potential at the beginning of stomatal closure [MPa].\nPsi_sto_50::FT: Soil water potential at 50 % stomatal closure [MPa].\nSl::FT: Specific leaf area of biomass [m^2 /gC] [-].\nSPARTREE::Int: Tree root distribution: 1 = Tree roots can access all water in the soil\n\n(imp, bare, veg) equally; 2 = If the tree crown is smaller than the combined vegetated and bare fraction, then the trees only transpire from these fractions. Otherwise, they also transpire from the impervious ground fraction. [-].\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.SurfaceFractions","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.SurfaceFractions","text":"SurfaceFractions{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for the SurfaceFractions model component.\n\nFields\n\nroof::LocationSpecificSurfaceFractions{FT}: Roof surface fractions.\nground::LocationSpecificSurfaceFractions{FT}: Ground surface fractions.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.LocationSpecificThermalProperties","text":"LocationSpecificThermalProperties{FT<:AbstractFloat} <: AbstractHeightDependentParameters{FT}\n\nParameters for the location-specific (wall, roof, ground) thermal properties.\n\nFields\n\nlan_dry::FT: Thermal conductivity dry solid [W/m K]\ncv_s::FT: Volumetric heat capacity solid [J/m^3 K].\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.UrbanGeometryParameters","text":"UrbanGeometryParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for the UrbanGeometry model component.\n\nFields\n\nHeight_canyon::FT: Height of urban canyon [m].\nWidth_canyon::FT: Ground width of urban canyon [m].\nWidth_roof::FT: Roof width of urban canyon [m].\nHeight_tree::FT: Tree height [m].\nRadius_tree::FT: Tree radius (=1/4 fg,tree *Wcan) [m].\nDistance_tree::FT: Distance of wall to tree trunk [m].\nHcan_max::FT: Maximum height of roughness elements (buildings) [m].\nHcan_std::FT: Standard deviation of roughness elements (buildings) [m].\ntrees::Bool: Easy switch to include (=1) and exclude (=0) trees in the urban canyon.\nftree::FT: Tree fraction along canyon axis\nhcanyon::FT: Normalized height of urban canyon [-].\nwcanyon::FT: Normalized ground width of urban canyon [-].\nwroof::FT: Normalized roof width of urban canyon [-]\nhtree::FT: Normalized tree height [-]\nradius_tree::FT: Normalized tree radius [-].\ndistance_tree::FT: Normalized distance of wall to tree trunk [-].\nratio::FT: Height-to-width ratio [-].\nwcanyon_norm::FT: Normalized canyon width overall [-].\nwroof_norm::FT: Normalized roof width overall [-].\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.VegetationParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.VegetationParameters","text":"VegetationParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nContainer for vegetation parameters for different urban surface components.\n\nFields\n\nroof::HeightDependentVegetationParameters{FT}: Vegetation parameters for roof vegetation\nground::HeightDependentVegetationParameters{FT}: Vegetation parameters for ground-level vegetation\ntree::HeightDependentVegetationParameters{FT}: Vegetation parameters for trees\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.ThermalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.ThermalProperties","text":"ThermalProperties{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nContainer for vegetation parameters for different urban surface components.\n\nFields\n\nroof::LocationSpecificThermalProperties{FT}: Roof thermal properties\nground::LocationSpecificThermalProperties{FT}: Ground thermal properties\nwall::LocationSpecificThermalProperties{FT}: Wall thermal properties\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.OpticalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.OpticalProperties","text":"OpticalProperties{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nContainer for optical properties for different urban surface components.\n\nFields\n\nroof::VegetatedOpticalProperties{FT}: Roof optical properties\nground::VegetatedOpticalProperties{FT}: Ground optical properties\nwall::SimpleOpticalProperties{FT}: Wall optical properties\ntree::SimpleOpticalProperties{FT}: Tree optical properties\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.SimpleOpticalProperties","text":"SimpleOpticalProperties{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for the location-specific (wall and tree) optical properties, for which albedo and emissivity have been pre-calculated.\n\nFields\n\nalbedo::FT: Surface albedo (-)\nemissivity::FT: Surface emissivity (-)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.VegetatedOpticalProperties","text":"VegetatedOpticalProperties{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nOptical properties specific to vegetated surfaces (roof and ground)\n\nFields\n\naveg::FT: Vegetation surface albedo (-)\naimp::FT: Impervious surface albedo (-)\nabare::FT: Bare surface albedo (-), only used for ground\neveg::FT: Vegetation surface emissivity (-)\neimp::FT: Impervious surface emissivity (-)\nebare::FT: Bare surface emissivity (-), only used for ground\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.BuildingEnergyModelParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.BuildingEnergyModelParameters","text":"BuildingEnergyModelParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nContainer for all building energy model parameters.\n\nFields\n\nindoor_optical::IndoorOpticalProperties{FT}: Indoor surface optical properties\nthermal::ThermalBuilding{FT}: Building thermal properties\nwindows::WindowParameters{FT}: Window parameters\nhvac::HVACParameters{FT}: HVAC system parameters\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.IndoorOpticalProperties","text":"IndoorOpticalProperties{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nOptical properties for indoor building surfaces.\n\nFields\n\nabc::FT: Albedo ceiling (-)\nabw::FT: Albedo wall (-)\nabg::FT: Albedo ground (-)\nabm::FT: Albedo internal mass (-)\nec::FT: Emissivity ceiling (-)\neg::FT: Emissivity ground (-)\new::FT: Emissivity wall (-)\nem::FT: Emissivity internal mass (-)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.ThermalBuilding","text":"ThermalBuilding{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters specifying thermal properties and dimensions of building internal mass.\n\nFields\n\nIntMassOn::Int: Include building internal mass in calculation (0/1)\nFloorHeight::FT: Average floor height in building (m)\ndzFloor::FT: Average thickness of floors in building (m)\ndzWall::FT: Average thickness of walls in building (m)\nlan_ground_floor::FT: Building ground thermal conductivity (W/m K)\ncv_ground_floor::FT: Building ground volumetric heat capacity (J/m³ K)\nlan_floor_IntMass::FT: Internal mass floor thermal conductivity (W/m K)\ncv_floor_IntMass::FT: Internal mass floor volumetric heat capacity (J/m³ K)\nlan_wall_IntMass::FT: Internal mass wall thermal conductivity (W/m K)\ncv_wall_IntMass::FT: Internal mass wall volumetric heat capacity (J/m³ K)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.WindowParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.WindowParameters","text":"WindowParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for building windows.\n\nFields\n\nWindowsOn::Int: Include windows in simulation (0/1)\nGlazingRatio::FT: Window-to-wall ratio (-)\nUvalue::FT: U-value of windows (W/m² K)\nlan_windows::FT: Thermal conductivity of windows (W/m K)\ncv_glass::FT: Volumetric heat capacity of glass (J/m³ K)\ndztot::FT: Total thickness of glass layers (m)\nSHGC::FT: Solar heat gain coefficient (-)\nSolarTransmittance::FT: Solar radiation transmittance through windows (-)\nSolarAbsorptivity::FT: Fraction of solar radiation absorbed by window (-)\nSolarAlbedo::FT: Window albedo (-)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.HVACParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.HVACParameters","text":"HVACParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for HVAC system.\n\nFields\n\nACon::Bool: Enable air conditioning (true/false)\nAC_onCool::Bool: Enable cooling mode (true/false)\nAC_onDehum::Bool: Enable dehumidification mode (true/false)\nMasterOn::Bool: Enable master control (true/false)\nHeatingon::Bool: Enable heating (true/false)\nTsetpointCooling::FT: Cooling setpoint temperature (K)\nTsetpointHeating::FT: Heating setpoint temperature (K)\nRHsetpointCooling::FT: Cooling setpoint relative humidity (%)\nRHsetpointHeating::FT: Heating setpoint relative humidity (%)\nACH::FT: Air changes per hour (1/h)\nCOPAC::FT: Coefficient of performance for AC (-)\nCOPHeat::FT: Coefficient of performance for heating (-)\nf_ACLatentToQ::FT: Fraction of latent heat removed by AC that is condensed (-)\nq_RHspCooling::FT: Latent heat for cooling relative humidity setpoint (W/m²)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.SoilParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.SoilParameters","text":"SoilParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nContainer for soil parameters for different urban surface components.\n\nFields\n\nroof::VegetatedSoilParameters{FT}: Roof soil parameters\nground::VegetatedSoilParameters{FT}: Ground soil parameters\nSp_In_T::FT: Specific water retained by a tree (mm m^2 VEG area m^-2 plant area)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.VegetatedSoilParameters","text":"VegetatedSoilParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nSoil parameters specific to vegetated surfaces (roof and ground)\n\nFields\n\nPcla::FT: Fraction of clay in the soil (-)\nPsan::FT: Fraction of sand in the soil (-)\nPorg::FT: Fraction of organic material in the soil (-)\nIn_max_imp::FT: Maxiumum interception capacity of impervious area (mm)\nIn_max_ground::FT: Maxiumum interception capacity of ground under roof vegetation (mm)\nIn_max_underveg::FT: Maxiumum interception capacity of vegetated ground area (mm)\nIn_max_bare::FT: Maxiumum interception capacity of bare ground area (mm)\nSp_In::FT: specific water retained by a vegetated surface (mm m^2 VEG area m^-2 plant area)\nKimp::FT: Hydraulic conductivity of impervious area (mm/h)\nKfc::FT: Conductivity at field capacity (mm/h)\nPhy::FT: Suction at the residual/hygroscopic water content (kPa)\nSPAR::Int: SOIL PARAMETER TYPE 1-VanGenuchten 2-Saxton-Rawls\nKbot::FT: Conductivity at the bedrock layer (mm/h)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.PersonParameters","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.PersonParameters","text":"PersonParameters{FT<:AbstractFloat} <: AbstractParameters{FT}\n\nParameters for the person in the urban canyon for MRT calculations.\n\nFields\n\nPositionPx::FT: Position within canyon [m]\nPositionPz::FT: Height of centre of person [m]\nPersonWidth::FT: Horizontal radius of ellipse describing person (=hip width / 2) [-]\nPersonHeight::FT: Vertical radius of ellipse describing person (= height / 2) [-]\nHeightWind::FT: Height for wind speed to calculate OTC [m]\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.ParameterSet","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.ParameterSet","text":"ParameterSet{FT<:AbstractFloat} <: AbstractParameterSet{FT}\n\nParameters for the Urban Tethys-Chloris model.\n\nFields\n\nbuilding_energy::BuildingEnergyModelParameters{FT}: Parameters for the building energy model.\nperson::PersonParameters{FT}: Parameters for the person.\nsoil::SoilParameters{FT}: Parameters for the soil.\nsurfacefractions::SurfaceFractions{FT}: Parameters for the surface fractions.\nthermal::ThermalProperties{FT}: Parameters for the thermal properties.\noptical::OpticalProperties{FT}: Parameters for the optical properties.\nurbangeometry::UrbanGeometryParameters{FT}: Parameters for the urban geometry.\nvegetation::VegetationParameters{FT}: Parameters for the vegetation.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#UrbanTethysChloris.ModelComponents.Parameters.TreeThermalProperties","page":"Reference","title":"UrbanTethysChloris.ModelComponents.Parameters.TreeThermalProperties","text":"TreeThermalProperties{FT<:AbstractFloat} <: AbstractHeightDependentParameters{FT}\n\nParameters for the tree thermal properties.\n\nFields\n\nCthermal_leaf::FT: [J m-2 K-1] Heat capacity per single leaf area\n\n\n\n\n\n","category":"type"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"90-contributing/#contributing","page":"Contributing guidelines","title":"Contributing guidelines","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"First of all, thanks for the interest!","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"We welcome all kinds of contribution, including, but not limited to code, documentation, examples, configuration, issue creating, etc.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"Be polite and respectful, and follow the code of conduct.","category":"page"},{"location":"90-contributing/#Bug-reports-and-discussions","page":"Contributing guidelines","title":"Bug reports and discussions","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.","category":"page"},{"location":"90-contributing/#Working-on-an-issue","page":"Contributing guidelines","title":"Working on an issue","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you found an issue that interests you, comment on that issue what your plans are. If the solution to the issue is clear, you can immediately create a pull request (see below). Otherwise, say what your proposed solution is and wait for a discussion around it.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"tip: Tip\nFeel free to ping us after a few days if there are no responses.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If your solution involves code (or something that requires running the package locally), check the developer documentation. Otherwise, you can use the GitHub interface directly to create your pull request.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"","category":"page"},{"location":"02-artifacts/#Artifacts","page":"Artifacts","title":"Artifacts","text":"","category":"section"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"UrbanTethysChloris.jl is checked against its original MATLAB counterpart, by comparing the output of the Julia functions with that of the MATLAB functions. This ensures that the Julia implementation is consistent with the expected behavior defined in the original MATLAB code. The comparisons are performed via the Julia artifact system and two repositories associated with this package","category":"page"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"URBES-utc-test-data creates the translation test data and the associated .tar.gz\nUTCBEMModelCode contains the original MATLAB code for the Urban Tethys & Chloris model, including the building energy model.","category":"page"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"At present, the creation of the artifact is not automated in the UrbanTethysChloris.jl package. Users must manually create and manage the artifacts as needed by updating the Artifact.toml file with the new sha256 hashes of the .tar.gz file. To do so, first download the latest version of the file from the URBES-utc-test-data repository. Then, run the following code in the Julia REPL","category":"page"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"using Tar, Inflate, SHA\n\nfilename = \"path/to/your/file.tar.gz\"\nprintln(\"sha256: \", bytes2hex(open(sha256, filename)))\nprintln(\"git-tree-sha1: \", Tar.tree_hash(IOBuffer(inflate_gzip(filename))))","category":"page"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"Then, copy the two hashes in the Artifacts.toml file located in the test folder.","category":"page"},{"location":"02-artifacts/","page":"Artifacts","title":"Artifacts","text":"","category":"page"},{"location":"#UrbanTethysChloris","page":"UrbanTethysChloris","title":"UrbanTethysChloris","text":"","category":"section"},{"location":"","page":"UrbanTethysChloris","title":"UrbanTethysChloris","text":"Documentation for UrbanTethysChloris.","category":"page"},{"location":"#Contributors","page":"UrbanTethysChloris","title":"Contributors","text":"","category":"section"},{"location":"","page":"UrbanTethysChloris","title":"UrbanTethysChloris","text":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sphamba\"><img src=\"https://avatars.githubusercontent.com/u/17217484?v=4?s=100\" width=\"100px;\" alt=\"Son Pham-Ba\"/><br /><sub><b>Son Pham-Ba</b></sub></a><br /><a href=\"#projectManagement-sphamba\" title=\"Project Management\">📆</a> <a href=\"#review-sphamba\" title=\"Reviewed Pull Requests\">👀</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hsolleder\"><img src=\"https://avatars.githubusercontent.com/u/9566930?v=4?s=100\" width=\"100px;\" alt=\"H Solleder\"/><br /><sub><b>H Solleder</b></sub></a><br /><a href=\"#code-hsolleder\" title=\"Code\">💻</a> <a href=\"#doc-hsolleder\" title=\"Documentation\">📖</a> <a href=\"#review-hsolleder\" title=\"Reviewed Pull Requests\">👀</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->","category":"page"},{"location":"","page":"UrbanTethysChloris","title":"UrbanTethysChloris","text":"","category":"page"},{"location":"01-modelcomponents/#model_components","page":"Model Components","title":"Model Components","text":"","category":"section"},{"location":"01-modelcomponents/","page":"Model Components","title":"Model Components","text":"The model is structured using model components as composite types. Here is a general overview of the model components:","category":"page"},{"location":"01-modelcomponents/","page":"Model Components","title":"Model Components","text":"graph TD\n  A[ParameterSet] --> B[SurfaceFractions] --> F[LocationSpecificSurfaceFractions]\n  A --> C[ThermalProperties]\n  A --> D[UrbanGeometryParameters]\n  A --> E[VegetationParameters] --> G[HeightDependentVegetationParameters]\n  A --> H[Optical Properties] --> I[SimpleOpticalProperties]\n  H --> J[VegetatedOpticalProperties]\n  A --> K[BuildingEnergyModelParameters]\n  K --> L[IndoorOpticalProperties]\n  K --> M[ThermalBuilding]\n  K --> N[WindowParameters]\n  K --> O[HVACParameters]\n  A --> P[PersonParameters]\n  A --> Q[SoilParameters]\n  Q --> R[VegetatedSoilParameters]\n  C --> S[TreeThermalProperties]\n  C --> T[LocationSpecificThermalProperties]\n  Q --> U[WallSoilParameters]","category":"page"},{"location":"01-modelcomponents/","page":"Model Components","title":"Model Components","text":"","category":"page"}]
}
